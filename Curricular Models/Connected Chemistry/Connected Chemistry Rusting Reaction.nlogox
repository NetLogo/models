<?xml version="1.0" encoding="utf-8"?>
<model version="NetLogo 7.0.0-internal1" snapToGrid="true">
  <code><![CDATA[globals
[
  tick-advance-amount                                ;; clock variable
  max-tick-advance-amount                            ;; the largest a tick length is allowed to be
  avg-speed avg-energy                       ;; current averages
  show-rust-molecule-boundaries?
  total-iron-atoms
  total-oxygen-atoms
  reactant-count-iron-atoms
  reactant-count-oxygen-atoms
  product-count-iron-atoms
  product-count-oxygen-atoms
  mass-oxygen-molecule
  mass-iron-atom
  mass-rust-molecule
  background-color
  water-color
  particle-size
]

breed [ oxygen-molecules oxygen-molecule]
breed [ rust-molecules rust-molecule]
breed [ iron-atoms iron-atom ]

patches-own [water? radiation]

oxygen-molecules-own [ mass energy speed last-collision]
rust-molecules-own   [ mass vibrate-energy drag?]
iron-atoms-own       [ mass vibrate-energy]


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SETUP PROCEDURES      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to setup
  clear-all
  set particle-size 1.4
  set mass-oxygen-molecule 4
  set background-color black
  set water-color blue
  set show-rust-molecule-boundaries? false
  set max-tick-advance-amount 0.02
  set-default-shape iron-atoms       "iron-atom"
  set-default-shape oxygen-molecules "oxygen-molecule"
  set-default-shape rust-molecules   "rust-molecule"
  make-box
  make-iron-atom
  make-oxygen-molecules
  ask patches [set water? false]
  update-variables
  reset-ticks
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;RUNTIME PROCEDURES    ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to go
  check-mouse-interactions
  ;; fade away radiation in patches after UV light is shone on them
  ask patches with [radiation > 0 and water? ] [set radiation (radiation - 5)  set pcolor (water-color +  (radiation / 20))]
  ask patches with [radiation > 0 and not water?] [set radiation (radiation - 5)  set pcolor (background-color + (radiation / 10))]

  ask oxygen-molecules [if radiation > 0 [set energy (energy + radiation) set speed speed-from-energy]]
  ask oxygen-molecules [ check-for-bounce-off-wall ]
  ask oxygen-molecules with [pxcor = max-pxcor and pxcor = min-pxcor and pycor = min-pycor and pycor = max-pycor] [remove-from-wall]
  ask oxygen-molecules [ move ]
  ask oxygen-molecules with [any? iron-atoms-here or any? rust-molecules-here] [remove-from-solid-block]

  visualize-vibrational-energy
  visualize-rust-molecule-boundaries

  ask oxygen-molecules
  [
   check-for-collision
   check-for-bounce-off-iron-atom
   check-for-reaction
  ]
  update-variables
  calculate-tick-advance-amount
  tick-advance tick-advance-amount
  update-plots
  display
end


to update-variables
  set avg-speed  mean [speed] of oxygen-molecules
  set avg-energy mean [energy] of oxygen-molecules
  set reactant-count-iron-atoms (count iron-atoms)
  set reactant-count-oxygen-atoms  ((count oxygen-molecules) * 2) ;; each oxygen molecule has two oxygen atoms
  set product-count-iron-atoms ((count rust-molecules) * 2) ;; each rust molecule has two iron atoms
  set product-count-oxygen-atoms  ((count rust-molecules) * 3) ;; each rust molecule has three oxygen atoms
  set total-iron-atoms (reactant-count-iron-atoms + product-count-iron-atoms)
  set total-oxygen-atoms  (reactant-count-oxygen-atoms + product-count-oxygen-atoms)
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;DETECT CHEMICAL REACTION;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to check-for-reaction
  let iron-pair? false
  let product-molecule-1 nobody
  let product-molecule-2 nobody
  let reactants-oxygen-molecules nobody
  let reactants-oxygen-atoms nobody
  let this-iron-atom nobody
  let product-location-1 nobody
  let product-location-2 nobody
  let other-iron-atoms nobody
  let water-catalysts 0.1

  ask iron-atoms  [
    set this-iron-atom self
   ;; reaction requires 4 iron atoms (one is the calling agent, three are on neighbors) and 3 oxygen molecules
    if ((count iron-atoms-on neighbors >= 3) and (count oxygen-molecules-on neighbors >= 3)   ) [
      set reactants-oxygen-molecules n-of 3 oxygen-molecules-on neighbors
      set water-catalysts count neighbors with [water?]
      set other-iron-atoms n-of 3 iron-atoms-on neighbors
      if (
        sum [energy] of reactants-oxygen-molecules > activation-energy or
        (sum [energy] of reactants-oxygen-molecules > activation-energy / 2 and water-catalysts > 0)
      ) [
        if rust-forms = "at oxygen locations" [  ;; have rust form right where one of the oxygen molecules were
          ask n-of 2 reactants-oxygen-molecules [
          hatch 1 [create-rust-molecule]]
        ]
        if rust-forms = "at iron locations" [  ;; have rust form right where one of the iron atoms were
          hatch 1 [create-rust-molecule]
          ask n-of 1 other-iron-atoms [
          hatch 1 [create-rust-molecule]]
        ]
        if rust-forms = "at both iron and oxygen locations" [ ;; have rust form at either where the oxygen molecule was or the iron atom was
          hatch 1 [create-rust-molecule]
          ask n-of 1 reactants-oxygen-molecules [
          hatch 1 [create-rust-molecule]]
        ]
        ask other-iron-atoms [die]  ;; remove the products
        ask reactants-oxygen-molecules [die]
        die

      ]
    ]
  ]
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ENERGY VISUALIZATION;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to visualize-vibrational-energy
  let molecules-in-solid (turtle-set rust-molecules iron-atoms)
  if solid-vibration? [
    ask molecules-in-solid [ ;; visualize energy as a vibration in rust molecules
      set vibrate-energy (vibrate-energy + radiation / 50)
      if vibrate-energy >= 20 [set vibrate-energy 20]
      if vibrate-energy <= 0 [set vibrate-energy 0]
      setxy pxcor +  ((sqrt vibrate-energy) * (1 - random-float 2)) / 100 pycor + ((sqrt vibrate-energy) * (1 - random-float 2)) / 100
   ]
 ]
end



to toggle-rust-molecule-boundaries  ;; visualization technique to better see the rust molecules
  ifelse show-rust-molecule-boundaries? [set show-rust-molecule-boundaries? false ]
     [set show-rust-molecule-boundaries? true]
end

to visualize-rust-molecule-boundaries
  ifelse show-rust-molecule-boundaries? [ask rust-molecules [set shape  "rust-molecule"]]
     [ask rust-molecules [set shape "rust-molecule-boundary"]]
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;SETUP RELATED PROCEDURES;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


to make-box
  ask patches with [pxcor = min-pxcor or pxcor = max-pxcor or pycor = min-pycor or pycor = max-pycor]
    [ set pcolor gray ]
end


to make-iron-atom
  set-default-shape iron-atoms "iron-atom"

  if iron-block-geometry = "9 x 9 middle box" [
    ask patches with [ pxcor <= 4 and  pycor <= 4 and pxcor >= -4 and pycor >= -4] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "6 x 6 middle box" [
    ask patches with [ pxcor <= 3 and  pycor <= 3 and pxcor >= -2 and pycor >= -2] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "4 x 9 middle box" [
    ask patches with [ pxcor <= 2 and pycor <= 4 and pxcor >= -1 and pycor >= -4] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "3 x 12 middle box" [
    ask patches with [ pxcor <= 1 and  pycor <= 6 and pxcor >= -1 and pycor >= -5] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "2 x 18 middle box" [
    ask patches with [ pxcor <= 1 and  pycor <= 9 and pxcor >= 0 and pycor >= -8] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "19 x 1 bottom box" [
    ask patches with [ pxcor <= 9 and pxcor >= -9 and pycor > min-pxcor and pycor <= (min-pxcor + 1)] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "19 x 2 bottom box" [
    ask patches with [ pxcor <= 9 and  pxcor >= -9 and pycor > min-pxcor  and pycor <= (min-pxcor + 2)] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "19 x 3 bottom box" [
    ask patches with [ pxcor <= 9 and pxcor >= -9 and pycor > min-pxcor and pycor <= (min-pxcor + 3)] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "19 x 4 bottom box" [
    ask patches with [ pxcor <= 9 and  pxcor >= -9 and pycor > min-pxcor and pycor <= (min-pxcor + 4)] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
  if iron-block-geometry = "19 x 5 bottom box" [
    ask patches with [ pxcor <= 9 and pxcor >= -9 and pycor > min-pxcor and pycor <= (min-pxcor + 5)] [
    sprout-iron-atoms 1 [setup-iron-atom]]
  ]
end



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PARTICLE INITIALIZATION ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to create-rust-molecule
    set breed rust-molecules
    set drag? false
    set size particle-size
    set vibrate-energy ((random-float 2) * 40)
end


to setup-iron-atom
  set color gray
  set size particle-size
  set vibrate-energy (initial-gas-temperature / 10)
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MOUSE INTERACTIONS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to check-mouse-interactions
  if (mouse-interaction = "add water") [add-water-catalyst]
  if (mouse-interaction = "remove water") [remove-water-catalyst]
  if (mouse-interaction = "drag away rust") [listen-move-rust-molecules]
  if (mouse-interaction = "shine UV light on iron") [shine-uv-light]
end


to shine-uv-light
 let snap-xcor mouse-xcor
 let snap-ycor mouse-ycor
 if mouse-down? [
   ask patches with [(distancexy snap-xcor snap-ycor) <= 2 and
   pxcor != max-pxcor and pxcor != min-pxcor and pycor != min-pycor and pycor != max-pycor]
     [set radiation (radiation + 10) if radiation >= 100 [set radiation 100] ]
 ]
end


to add-water-catalyst
  let snap-mouse-xcor round mouse-xcor
  let snap-mouse-ycor round mouse-ycor
  if mouse-down? and not any? iron-atoms-on patch snap-mouse-xcor snap-mouse-ycor and not any? rust-molecules-on patch snap-mouse-xcor snap-mouse-ycor
    and snap-mouse-xcor != max-pxcor and snap-mouse-xcor != min-pxcor and snap-mouse-ycor != max-pycor and snap-mouse-ycor != min-pycor
    [ask patch snap-mouse-xcor snap-mouse-ycor [set water? true set pcolor blue]]
end


to remove-water-catalyst
  let  snap-mouse-xcor round mouse-xcor
  let snap-mouse-ycor round mouse-ycor
  if mouse-down? and snap-mouse-xcor != max-pxcor and snap-mouse-xcor != min-pxcor and snap-mouse-ycor != max-pycor and snap-mouse-ycor != min-pycor
    [ ask patch snap-mouse-xcor snap-mouse-ycor [set water? false set pcolor black]]
end


to listen-move-rust-molecules
  let snap-shot-mouse-xcor (mouse-xcor)
  let snap-shot-mouse-ycor ( mouse-ycor)

  ;; for any molecules in drag state
  if (any? rust-molecules with [drag?]) [
    ask rust-molecules with [drag?] [setxy snap-shot-mouse-xcor snap-shot-mouse-ycor]
  ]

  ;; if there are molecules here
  if (any? rust-molecules with [pxcor =  round snap-shot-mouse-xcor and pycor = round snap-shot-mouse-ycor]) [
    if (mouse-down? and not any? rust-molecules with [drag?]) [                                 ;; if none currently being dragged
      ask one-of rust-molecules with [pxcor = round snap-shot-mouse-xcor and pycor = round snap-shot-mouse-ycor] [set drag? true]
    ]
  ]
  if (not mouse-down?) [ask rust-molecules [set drag? false] ]
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PARTICLE PENETRATION ERROR HANDLING;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; deals with the case when a particle penetrates into the wall or the solid iron, but should not have
;; removes the particle to the nearest open patch

to remove-from-wall
  let available-patches patches with [not any? iron-atoms-here and not any? rust-molecules-here]
  let closest-patch nobody
  if (any? available-patches) [
    set closest-patch min-one-of available-patches [distance myself]
    set heading towards closest-patch
    move-to closest-patch
  ]
end


to remove-from-solid-block
  let available-patches patches with [not any? iron-atoms-here and not any? rust-molecules-here]
  let closest-patch nobody
  if (any? available-patches) [
    set closest-patch min-one-of available-patches [distance myself]
    set heading towards closest-patch
    move-to closest-patch
  ]
end



;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;COLLISION AND REACTION;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to check-for-bounce-off-iron-atom
   let hit-iron-atom one-of iron-atoms in-cone 1 180
   let hit-rust-molecule one-of rust-molecules in-cone 1 180
   let speed-loss 0
   ifelse hit-iron-atom != nobody  [
     let hit-angle towards hit-iron-atom
     ifelse (hit-angle < 135 and hit-angle > 45) or (hit-angle < 315 and hit-angle > 225)
       [set heading (- heading)] [set heading (180 - heading)]
   ]
   [if hit-rust-molecule != nobody [
      let hit-angle towards hit-rust-molecule
      ifelse (hit-angle < 135 and hit-angle > 45) or (hit-angle < 315 and hit-angle > 225)
        [set heading (- heading)] [set heading (180 - heading)]
   ]]
end



to check-for-bounce-off-wall  ;; oxygen-molecules procedure
  ;; get the coordinates of the patch we'll be on if we go forward 1
  let new-patch patch-ahead 1
  let new-px [pxcor] of new-patch
  let new-py [pycor] of new-patch
  ;; if we're not about to hit a wall, we don't need to do any further checks
  if not shade-of? gray [pcolor] of new-patch
    [ stop ]
  ;; if hitting left or right wall, reflect heading around x axis
  if (new-px = max-pxcor or new-px = min-pxcor)
    [ set heading (- heading) ]
  ;; if hitting top or bottom wall, reflect heading around y axis
  if (new-py = min-pycor or new-py = max-pycor)
    [ set heading (180 - heading)]
end


to move  ;; oxygen-molecules procedure
  if patch-ahead (speed * tick-advance-amount) != patch-here
    [ set last-collision nobody ]
  jump (speed * tick-advance-amount)
end

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAS MOLECULES COLLISIONS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;from GasLab

to calculate-tick-advance-amount
  ;; tick-advance-amount is calculated in such way that even the fastest
  ;; oxygen-molecules will jump at most 1 patch length in a clock tick. As
  ;; oxygen-molecules jump (speed * tick-advance-amount) at every clock tick, making
  ;; tick length the inverse of the speed of the fastest oxygen-molecules
  ;; (1/max speed) assures that. Having each oxygen-molecules advance at most
   ; one patch-length is necessary for it not to "jump over" a wall
   ; or another oxygen-molecules.
  ifelse any? oxygen-molecules with [speed > 0]
    [ set tick-advance-amount min list (1 / (ceiling max [speed] of oxygen-molecules)) max-tick-advance-amount ]
    [ set tick-advance-amount max-tick-advance-amount ]
end


to check-for-collision  ;; oxygen-molecules procedure
  if count other oxygen-molecules-here in-radius 1 = 1
  [
    ;; the following conditions are imposed on collision candidates:
    ;;   1. they must have a lower who number than my own, because collision
    ;;      code is asymmetrical: it must always happen from the point of view
    ;;      of just one oxygen-molecules.
    ;;   2. they must not be the same oxygen-molecules that we last collided with on
    ;;      this patch, so that we have a chance to leave the patch after we've
    ;;      collided with someone.
    let candidate one-of other oxygen-molecules-here with
      [self < myself and myself != last-collision]
    ;; we also only collide if one of us has non-zero speed. It's useless
    ;; (and incorrect, actually) for two oxygen-molecules with zero speed to collide.
    if (candidate != nobody) and (speed > 0 or [speed] of candidate > 0)
    [
      collide-with candidate
      set last-collision candidate
      let this-candidate self
      ask candidate [set last-collision this-candidate]
    ]
  ]
end

;; implements a collision with another oxygen-molecules.
;;
;;
;; The two oxygen-molecules colliding are self and other-oxygen-molecules, and while the
;; collision is performed from the point of view of self, both oxygen-molecules are
;; modified to reflect its effects. This is somewhat complicated, so I'll
;; give a general outline here:
;;   1. Do initial setup, and determine the heading between oxygen-molecules centers
;;      (call it theta).
;;   2. Convert the representation of the velocity of each oxygen-molecules from
;;      speed/heading to a theta-based vector whose first component is the
;;      oxygen-molecules' speed along theta, and whose second component is the speed
;;      perpendicular to theta.
;;   3. Modify the velocity vectors to reflect the effects of the collision.
;;      This involves:
;;        a. computing the velocity of the center of mass of the whole system
;;           along direction theta
;;        b. updating the along-theta components of the two velocity vectors.
;;   4. Convert from the theta-based vector representation of velocity back to
;;      the usual speed/heading representation for each oxygen-molecules.
;;   5. Perform final cleanup and update derived quantities.
to collide-with [ other-oxygen-molecules ] ;; oxygen-molecules procedure
  ;;; PHASE 1: initial setup

  ;; for convenience, grab some quantities from other-oxygen-molecules
  let mass2 [mass] of other-oxygen-molecules
  let speed2 [speed] of other-oxygen-molecules
  let heading2 [heading] of other-oxygen-molecules

  ;; since oxygen-molecules are modeled as zero-size points, theta isn't meaningfully
  ;; defined. we can assign it randomly without affecting the model's outcome.
  let theta (random-float 360)



  ;;; PHASE 2: convert velocities to theta-based vector representation

  ;; now convert my velocity from speed/heading representation to components
  ;; along theta and perpendicular to theta
  let v1t (speed * cos (theta - heading))
  let v1l (speed * sin (theta - heading))

  ;; do the same for other-oxygen-molecules
  let v2t (speed2 * cos (theta - heading2))
  let v2l (speed2 * sin (theta - heading2))



  ;;; PHASE 3: manipulate vectors to implement collision

  ;; compute the velocity of the system's center of mass along theta
  let vcm (((mass * v1t) + (mass2 * v2t)) / (mass + mass2) )

  ;; now compute the new velocity for each oxygen-molecules along direction theta.
  ;; velocity perpendicular to theta is unaffected by a collision along theta,
  ;; so the next two lines actually implement the collision itself, in the
  ;; sense that the effects of the collision are exactly the following changes
  ;; in oxygen-molecules velocity.
  set v1t (2 * vcm - v1t)
  set v2t (2 * vcm - v2t)



  ;;; PHASE 4: convert back to normal speed/heading

  ;; now convert my velocity vector into my new speed and heading
  set speed sqrt ((v1t ^ 2) + (v1l ^ 2))
  set energy (0.5 * mass * speed ^ 2)
  ;; if the magnitude of the velocity vector is 0, atan is undefined. but
  ;; speed will be 0, so heading is irrelevant anyway. therefore, in that
  ;; case we'll just leave it unmodified.
  if v1l != 0 or v1t != 0
    [ set heading (theta - (atan v1l v1t)) ]

  ;; and do the same for other-oxygen-molecules
  ask other-oxygen-molecules [
    set speed sqrt ((v2t ^ 2) + (v2l ^ 2))
    set energy (0.5 * mass * (speed ^ 2))
    if v2l != 0 or v2t != 0
      [ set heading (theta - (atan v2l v2t)) ]
  ]

end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CREATE AND PLACE GAS MOLECULES;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to make-oxygen-molecules
  create-oxygen-molecules initial-oxygen-molecules
  [
    setup-oxygen-molecules
    random-position
  ]
end


to setup-oxygen-molecules  ;; oxygen-molecules procedure
  set size particle-size
  set energy initial-gas-temperature
  set mass mass-oxygen-molecule
  set speed speed-from-energy
  set last-collision nobody
end



;; Place oxygen-molecules at random, but they must not be placed on top of iron-atom atoms.
;; This procedure takes into account the fact that iron-atom molecules could have two possible arrangements,
;; i.e. high-surface area to low-surface area.
to random-position ;; oxygen-molecules procedure
  let open-patches nobody
  let open-patch nobody
  set open-patches patches with [not any? iron-atoms-here and pxcor != max-pxcor and pxcor != min-pxcor and pycor != min-pycor and pycor != max-pycor]
  set open-patch one-of open-patches
  move-to open-patch
  set heading random-float 360
end


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;REPORTERS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

to-report speed-from-energy
  report sqrt (2 * energy / mass)
end


to-report energy-from-speed
  report (mass * speed * speed / 2)
end


to-report last-n [n the-list]
  ifelse n >= length the-list
    [ report the-list ]
    [ report last-n n butfirst the-list ]
end


; Copyright 2007 Uri Wilensky.
; See Info tab for full copyright and license.]]></code>
  <widgets>
    <view x="490" maxPycor="10" updateMode="1" wrappingAllowedX="true" y="10" frameRate="120.0" minPycor="-10" height="340" showTickCounter="true" patchSize="16.0" fontSize="10" wrappingAllowedY="true" width="340" tickCounterLabel="ticks" maxPxcor="10" minPxcor="-10"></view>
    <button x="80" y="10" height="33" disableUntilTicks="true" forever="true" kind="Observer" width="94" display="go/stop">go</button>
    <button x="0" y="10" height="33" disableUntilTicks="false" forever="false" kind="Observer" width="75">setup</button>
    <slider x="0" step="1" y="85" height="33" min="1" direction="Horizontal" max="50" default="40.0" variable="initial-oxygen-molecules" width="175" sizeVersion="0" display="initial-oxygen-molecules"></slider>
    <plot x="180" yMax="100.0" yAxis="count" y="10" xMin="0.0" height="270" legend="true" xMax="10.0" autoplot="true" yMin="0.0" width="306" sizeVersion="0" xAxis="time" display="Number of Particles">
      <setup></setup>
      <update></update>
      <pen color="-2674135" legend="true" interval="1.0" mode="0" display="Oxygen molecules">
        <setup></setup>
        <update>plotxy ticks count oxygen-molecules</update>
      </pen>
      <pen color="-7500403" legend="true" interval="1.0" mode="0" display="Pure iron atoms">
        <setup></setup>
        <update>plotxy ticks count iron-atoms</update>
      </pen>
      <pen color="-6459832" legend="true" interval="1.0" mode="0" display="Rust molecules">
        <setup></setup>
        <update>plotxy ticks count rust-molecules</update>
      </pen>
    </plot>
    <slider x="1" step="1" y="48" height="33" min="1" direction="Horizontal" max="50" default="40.0" variable="initial-gas-temperature" width="175" sizeVersion="0" display="initial-gas-temperature"></slider>
    <switch x="0" y="300" height="33" on="true" variable="solid-vibration?" width="175" sizeVersion="0" display="solid-vibration?"></switch>
    <slider x="0" step="1" y="120" height="33" min="0" direction="Horizontal" max="400" default="400.0" variable="activation-energy" width="175" sizeVersion="0" display="activation-energy"></slider>
    <chooser x="0" y="155" height="45" variable="iron-block-geometry" current="9" width="175" sizeVersion="0" display="iron-block-geometry">
      <choice type="string" value="9 x 9 middle box"></choice>
      <choice type="string" value="6 x 6 middle box"></choice>
      <choice type="string" value="4 x 9 middle box"></choice>
      <choice type="string" value="3 x 12 middle box"></choice>
      <choice type="string" value="2 x 18 middle box"></choice>
      <choice type="string" value="19 x 1 bottom box"></choice>
      <choice type="string" value="19 x 2 bottom box"></choice>
      <choice type="string" value="19 x 3 bottom box"></choice>
      <choice type="string" value="19 x 4 bottom box"></choice>
      <choice type="string" value="19 x 5 bottom box"></choice>
    </chooser>
    <chooser x="0" y="200" height="45" variable="rust-forms" current="1" width="175" sizeVersion="0" display="rust-forms">
      <choice type="string" value="at iron locations"></choice>
      <choice type="string" value="at oxygen locations"></choice>
      <choice type="string" value="at both iron and oxygen locations"></choice>
    </chooser>
    <monitor x="180" precision="0" y="280" height="45" fontSize="11" width="150" sizeVersion="0" display="atoms of oxygen in gas">reactant-count-oxygen-atoms</monitor>
    <monitor x="330" precision="0" y="325" height="45" fontSize="11" width="155" sizeVersion="0" display="atoms of iron in rust">product-count-iron-atoms</monitor>
    <monitor x="330" precision="0" y="280" height="45" fontSize="11" width="155" sizeVersion="0" display="atoms of oxygen in rust">product-count-oxygen-atoms</monitor>
    <monitor x="180" precision="0" y="325" height="45" fontSize="11" width="150" sizeVersion="0" display="atoms of iron in block">reactant-count-iron-atoms</monitor>
    <button x="0" y="335" height="33" disableUntilTicks="true" forever="false" kind="Observer" width="175" display="toggle rust molecules">toggle-rust-molecule-boundaries</button>
    <chooser x="0" y="250" height="45" variable="mouse-interaction" current="4" width="175" sizeVersion="0" display="mouse-interaction">
      <choice type="string" value="none"></choice>
      <choice type="string" value="add water"></choice>
      <choice type="string" value="remove water"></choice>
      <choice type="string" value="shine UV light on iron"></choice>
      <choice type="string" value="drag away rust"></choice>
    </chooser>
  </widgets>
  <info><![CDATA[## WHAT IS IT?

This model simulates the behavior of oxygen gas particles in a closed container with solid iron.  It is one in a series of Connected Chemistry models, that the same basic rules for simulating the behavior of gases and chemical reactions.  Each model integrates different features in order to highlight different aspects of chemical reactions.

The basic principle of this rusting model is that oxygen gas particles are assumed to have three elementary actions: 1) they move, 2) they collide,  - either with other gas  particles or with any other objects such as non-reacting solid surfaces (walls), 3) and they can react with iron particles.

A basic representation of the oxidation reaction that occurs between oxygen particles and iron particles is  30<sub>2</sub> + 4Fe --> 2Fe<sub>2</sub>O<sub>3</sub>.  This represents a chemical reaction that requires three oxygen molecules and 4 iron atoms as reactants to create two rust molecules.  While this appears to be a single reaction, in reality, a series of intermediate compounds are created before rust as a product is formed.  But this simplified chemical reaction, without intermediates is often presented in introductory chemistry units and courses as a way to make sense of the initial reactants and final products in a rusting reaction.

In our everyday experiences, iron will not rust spontaneously with oxygen.  For iron to rust, three things are needed: iron, water and oxygen.  When these three type of molecules are near each other, the water acts as a catalyst for the rust reaction, acting as a good electrolyte permitting easier electron flow between atoms.

A second lesson common everyday pathway for the rusting reaction occurs in the presence of high energy UV radiation, and requires no water catalyst.  This is the rusting reaction that is believed to  occur on the surface of Mars.  The iron oxide on the surface of Mars accounts for much of its red-orange color.

Both of these pathways are represented in the model.

The catalytic role of water is simplified to be a geometric catalyst (a cluster of water molecules is represented by a blue patch).  It keeps the necessary reactants (dissolved oxygen molecules) trapped in that for a longer period of time than would occur otherwise if they were a gas.  This modeling assumption is different than representing the water an electron-transfer catalyst.

The contributing role of UV radiation is simplified to be a localized and temporary energy boost in the vibrational energy of the iron atoms, which in turn brings the reactants closer to the activation energy required for the reaction.

## HOW IT WORKS

The gas particles are modeled as hard balls with no internal energy except that which is due to their motion.  Solid particles are modeled as hard balls with internal energy represented as rotational energy.  Collisions between particles are elastic.

The basic principle of all gas behavior in the Connected Chemistry models, including this one, is the following algorithm:

1. A particle moves in a straight line without changing its speed, unless it collides with another particle or bounces off the wall.
2. Two particles "collide" if they find themselves on the same patch.
3. A random axis is chosen, as if they are two balls that hit each other and this axis is the line connecting their centers.
4. They exchange momentum and energy along that axis, according to the conservation of momentum and energy.  This calculation is done in the center of mass system.
5. Each particle is assigned its new velocity, energy, and heading.
6. If a particle finds itself on or very close to a wall of the container, it "bounces" -- that is, reflects its direction and keeps its same speed.
7. If a particle ever penetrates into the solid iron/rust matrix, it has moved too far forward in the last simulation time step, and is bounced back out to the closest open spot (patch).

## HOW TO USE IT

Initial settings:
INITIAL-GAS-TEMPERATURE: Sets the initial kinetic energy of each of the gas particles
INITIAL-OXYGEN-MOLECULES: Sets the number of initial oxygen gas particles
ACTIVATION-ENERGY: Sets the energy threshold required for a reaction to occur between the products.  The sum of the energies of the reactants must exceed this level for a reaction to occur.
IRON-BLOCK-GEOMETRY: Sets possible size and location of the iron block.
RUST-FORMS-AT: Determines whether rust molecules form within the metal block or on the surface of it or both.
MOUSE-INTERACTION: Gives the user options to "add water", "remove water", "remove rust", and "shine a UV beam on the iron".

The SETUP button will set the initial conditions.
The GO/STOP button will run the simulation.

## THINGS TO NOTICE

In this model, iron atoms adjacent to a patch with water and the necessary oxygen molecule reactants in it are pulled away from the iron metal block when rust forms.  This leads to the deposition of rust above the surface of the iron as well as pitting of the iron block.  This pitting effect occurs in reality.

As you drag away rust (using the mouse cursor), you expose more iron to the air, speeding up the rusting process.

The model demonstrates other emergent phenomena of when oxygen and iron react to form rust.  Some of these phenomena include how surface area affects the rate of the reaction, how temperature of the reactants affects the rate of the reaction, and how a catalyst (such as water) can speed up the rate of a reaction.  Other phenomena, such as atomic conservation in chemical reactions and limiting agents in chemical reactions are also visible in the model.

## THINGS TO TRY

Explore different surface geometries of iron.  How does the surface area affect the rate of the reaction?

## EXTENDING THE MODEL

Rust molecules could be knocked off the iron block when fast colliding molecules hit them.

Water could be modeled as particles (H<sub>2</sub>O molecules) instead of colored patches.  Oil is often used as a protective layer for preventing the rusting of iron.  Oil molecules (which repel water), but allow some oxygen through could be added to the model.

Salt water vs. fresh water could be added to the model, such that the salt water served as a better catalyst than fresh water.

UV light energy that is absorbed by the iron atom and converted to vibrational energy (particulate kinetic energy) could be reradiated as infra-red energy or conducted to particles in contact with each iron atom.  Currently such energy remains trapped in the iron atom unless a chemical reaction happens.

## NETLOGO FEATURES

This model shows a good way of preventing particles that bounce off the world-walls from penetrating the walls. By having a dynamic tick duration calculated every tick, it attempts that even the fastest moving particle never moves more than one patch per tick. The patch-ahead primitive can therefore always be used to check whether to change the heading of a particle that is ready to reflect or 'bounce' off of a wall.

When a gas particle is detected as having accidentally entered into the space of a patch that is a wall or has an iron particle in it, it is moved to the nearest open patch.

## CREDITS AND REFERENCES

This model is part of the Connected Chemistry curriculum.  See http://ccl.northwestern.edu/curriculum/chemistry/.

We would like to thank Sharona Levy and Michael Novak for their substantial contributions to this model.

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Novak, M. and Wilensky, U. (2007).  NetLogo .\Curricular Models\Connected Chemistry\Connected Chemistry Rusting Reaction model.  http://ccl.northwestern.edu/netlogo/models/.\CurricularModels\ConnectedChemistry\ConnectedChemistryRustingReaction.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

To cite the Connected Chemistry curriculum as a whole, please use:

* Wilensky, U., Levy, S. T., & Novak, M. (2004). Connected Chemistry curriculum. http://ccl.northwestern.edu/curriculum/chemistry/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2007 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This model is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

NetLogo itself is free software for non-commercial use under the terms of the GNU General Public License ([see full license information here](https://ccl.northwestern.edu/netlogo/docs/copyright.html)).

To inquire about commercial licenses for either NetLogo or specific models from the models library, please contact netlogo-commercial-admin@ccl.northwestern.edu.

<!-- 2007 ConChem Cite: Novak, M. -->]]></info>
  <turtleShapes>
    <shape name="default" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="5"></point>
        <point x="40" y="250"></point>
        <point x="150" y="205"></point>
        <point x="260" y="250"></point>
      </polygon>
    </shape>
    <shape name="02" rotatable="false" editableColorIndex="0">
      <circle x="60" y="75" marked="false" color="-684578305" diameter="120" filled="true"></circle>
      <circle x="120" y="120" marked="false" color="-684578305" diameter="120" filled="true"></circle>
      <circle x="120" y="120" marked="false" color="255" diameter="120" filled="false"></circle>
    </shape>
    <shape name="airplane" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="135" y="15"></point>
        <point x="120" y="60"></point>
        <point x="120" y="105"></point>
        <point x="15" y="165"></point>
        <point x="15" y="195"></point>
        <point x="120" y="180"></point>
        <point x="135" y="240"></point>
        <point x="105" y="270"></point>
        <point x="120" y="285"></point>
        <point x="150" y="270"></point>
        <point x="180" y="285"></point>
        <point x="210" y="270"></point>
        <point x="165" y="240"></point>
        <point x="180" y="180"></point>
        <point x="285" y="195"></point>
        <point x="285" y="165"></point>
        <point x="180" y="105"></point>
        <point x="180" y="60"></point>
        <point x="165" y="15"></point>
      </polygon>
    </shape>
    <shape name="arrow" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="0" y="150"></point>
        <point x="105" y="150"></point>
        <point x="105" y="293"></point>
        <point x="195" y="293"></point>
        <point x="195" y="150"></point>
        <point x="300" y="150"></point>
      </polygon>
    </shape>
    <shape name="box" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="285"></point>
        <point x="285" y="225"></point>
        <point x="285" y="75"></point>
        <point x="150" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="135"></point>
        <point x="15" y="75"></point>
        <point x="150" y="15"></point>
        <point x="285" y="75"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="75"></point>
        <point x="15" y="225"></point>
        <point x="150" y="285"></point>
        <point x="150" y="135"></point>
      </polygon>
      <line endX="150" startY="285" marked="false" color="255" endY="135" startX="150"></line>
      <line endX="15" startY="135" marked="false" color="255" endY="75" startX="150"></line>
      <line endX="285" startY="135" marked="false" color="255" endY="75" startX="150"></line>
    </shape>
    <shape name="bug" rotatable="true" editableColorIndex="0">
      <circle x="96" y="182" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="110" y="127" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <circle x="110" y="75" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <line endX="80" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
      <line endX="220" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
    </shape>
    <shape name="butterfly" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="209" y="199"></point>
        <point x="225" y="225"></point>
        <point x="225" y="255"></point>
        <point x="195" y="270"></point>
        <point x="165" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="89" y="198"></point>
        <point x="75" y="225"></point>
        <point x="75" y="255"></point>
        <point x="105" y="270"></point>
        <point x="135" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="139" y="148"></point>
        <point x="100" y="105"></point>
        <point x="55" y="90"></point>
        <point x="25" y="90"></point>
        <point x="10" y="105"></point>
        <point x="10" y="135"></point>
        <point x="25" y="180"></point>
        <point x="40" y="195"></point>
        <point x="85" y="194"></point>
        <point x="139" y="163"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="162" y="150"></point>
        <point x="200" y="105"></point>
        <point x="245" y="90"></point>
        <point x="275" y="90"></point>
        <point x="290" y="105"></point>
        <point x="290" y="135"></point>
        <point x="275" y="180"></point>
        <point x="260" y="195"></point>
        <point x="215" y="195"></point>
        <point x="162" y="165"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="135" y="225"></point>
        <point x="120" y="150"></point>
        <point x="135" y="120"></point>
        <point x="150" y="105"></point>
        <point x="165" y="120"></point>
        <point x="180" y="150"></point>
        <point x="165" y="225"></point>
      </polygon>
      <circle x="135" y="90" marked="false" color="255" diameter="30" filled="true"></circle>
      <line endX="195" startY="105" marked="false" color="255" endY="60" startX="150"></line>
      <line endX="105" startY="105" marked="false" color="255" endY="60" startX="150"></line>
    </shape>
    <shape name="car" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="300" y="180"></point>
        <point x="279" y="164"></point>
        <point x="261" y="144"></point>
        <point x="240" y="135"></point>
        <point x="226" y="132"></point>
        <point x="213" y="106"></point>
        <point x="203" y="84"></point>
        <point x="185" y="63"></point>
        <point x="159" y="50"></point>
        <point x="135" y="50"></point>
        <point x="75" y="60"></point>
        <point x="0" y="150"></point>
        <point x="0" y="165"></point>
        <point x="0" y="225"></point>
        <point x="300" y="225"></point>
        <point x="300" y="180"></point>
      </polygon>
      <circle x="180" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <circle x="30" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="162" y="80"></point>
        <point x="132" y="78"></point>
        <point x="134" y="135"></point>
        <point x="209" y="135"></point>
        <point x="194" y="105"></point>
        <point x="189" y="96"></point>
        <point x="180" y="89"></point>
      </polygon>
      <circle x="47" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
      <circle x="195" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
    </shape>
    <shape name="circle" rotatable="false" editableColorIndex="0">
      <circle x="30" y="30" marked="true" color="-1920102913" diameter="240" filled="true"></circle>
    </shape>
    <shape name="circle 2" rotatable="false" editableColorIndex="0">
      <circle x="16" y="16" marked="true" color="-1920102913" diameter="270" filled="true"></circle>
      <circle x="46" y="46" marked="false" color="255" diameter="210" filled="true"></circle>
    </shape>
    <shape name="clock" rotatable="true" editableColorIndex="0">
      <circle x="30" y="30" marked="true" color="-1920102913" diameter="240" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="31"></point>
        <point x="128" y="75"></point>
        <point x="143" y="75"></point>
        <point x="143" y="150"></point>
        <point x="158" y="150"></point>
        <point x="158" y="75"></point>
        <point x="173" y="75"></point>
      </polygon>
      <circle x="135" y="135" marked="false" color="255" diameter="30" filled="true"></circle>
    </shape>
    <shape name="cow" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="200" y="193"></point>
        <point x="197" y="249"></point>
        <point x="179" y="249"></point>
        <point x="177" y="196"></point>
        <point x="166" y="187"></point>
        <point x="140" y="189"></point>
        <point x="93" y="191"></point>
        <point x="78" y="179"></point>
        <point x="72" y="211"></point>
        <point x="49" y="209"></point>
        <point x="48" y="181"></point>
        <point x="37" y="149"></point>
        <point x="25" y="120"></point>
        <point x="25" y="89"></point>
        <point x="45" y="72"></point>
        <point x="103" y="84"></point>
        <point x="179" y="75"></point>
        <point x="198" y="76"></point>
        <point x="252" y="64"></point>
        <point x="272" y="81"></point>
        <point x="293" y="103"></point>
        <point x="285" y="121"></point>
        <point x="255" y="121"></point>
        <point x="242" y="118"></point>
        <point x="224" y="167"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="73" y="210"></point>
        <point x="86" y="251"></point>
        <point x="62" y="249"></point>
        <point x="48" y="208"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="25" y="114"></point>
        <point x="16" y="195"></point>
        <point x="9" y="204"></point>
        <point x="23" y="213"></point>
        <point x="25" y="200"></point>
        <point x="39" y="123"></point>
      </polygon>
    </shape>
    <shape name="face happy" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="90" y="239"></point>
        <point x="62" y="213"></point>
        <point x="47" y="191"></point>
        <point x="67" y="179"></point>
        <point x="90" y="203"></point>
        <point x="109" y="218"></point>
        <point x="150" y="225"></point>
        <point x="192" y="218"></point>
        <point x="210" y="203"></point>
        <point x="227" y="181"></point>
        <point x="251" y="194"></point>
        <point x="236" y="217"></point>
        <point x="212" y="240"></point>
      </polygon>
    </shape>
    <shape name="face neutral" rotatable="false" editableColorIndex="0">
      <circle x="8" y="7" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <rectangle endX="240" startY="195" marked="false" color="255" endY="225" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="face sad" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="168"></point>
        <point x="90" y="184"></point>
        <point x="62" y="210"></point>
        <point x="47" y="232"></point>
        <point x="67" y="244"></point>
        <point x="90" y="220"></point>
        <point x="109" y="205"></point>
        <point x="150" y="198"></point>
        <point x="192" y="205"></point>
        <point x="210" y="220"></point>
        <point x="227" y="242"></point>
        <point x="251" y="229"></point>
        <point x="236" y="206"></point>
        <point x="212" y="183"></point>
      </polygon>
    </shape>
    <shape name="fish" rotatable="false" editableColorIndex="0">
      <polygon color="-1" filled="true" marked="false">
        <point x="44" y="131"></point>
        <point x="21" y="87"></point>
        <point x="15" y="86"></point>
        <point x="0" y="120"></point>
        <point x="15" y="150"></point>
        <point x="0" y="180"></point>
        <point x="13" y="214"></point>
        <point x="20" y="212"></point>
        <point x="45" y="166"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="135" y="195"></point>
        <point x="119" y="235"></point>
        <point x="95" y="218"></point>
        <point x="76" y="210"></point>
        <point x="46" y="204"></point>
        <point x="60" y="165"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="75" y="45"></point>
        <point x="83" y="77"></point>
        <point x="71" y="103"></point>
        <point x="86" y="114"></point>
        <point x="166" y="78"></point>
        <point x="135" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="136"></point>
        <point x="151" y="77"></point>
        <point x="226" y="81"></point>
        <point x="280" y="119"></point>
        <point x="292" y="146"></point>
        <point x="292" y="160"></point>
        <point x="287" y="170"></point>
        <point x="270" y="195"></point>
        <point x="195" y="210"></point>
        <point x="151" y="212"></point>
        <point x="30" y="166"></point>
      </polygon>
      <circle x="215" y="106" marked="false" color="255" diameter="30" filled="true"></circle>
    </shape>
    <shape name="flag" rotatable="false" editableColorIndex="0">
      <rectangle endX="75" startY="15" marked="true" color="-1920102913" endY="300" startX="60" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="90" y="150"></point>
        <point x="270" y="90"></point>
        <point x="90" y="30"></point>
      </polygon>
      <line endX="90" startY="135" marked="true" color="-1920102913" endY="135" startX="75"></line>
      <line endX="90" startY="45" marked="true" color="-1920102913" endY="45" startX="75"></line>
    </shape>
    <shape name="flower" rotatable="false" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="135" y="120"></point>
        <point x="165" y="165"></point>
        <point x="180" y="210"></point>
        <point x="180" y="240"></point>
        <point x="150" y="300"></point>
        <point x="165" y="300"></point>
        <point x="195" y="240"></point>
        <point x="195" y="195"></point>
        <point x="165" y="135"></point>
      </polygon>
      <circle x="85" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="147" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="192" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="85" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="70" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="25" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="96" y="51" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="113" y="68" marked="false" color="255" diameter="74" filled="true"></circle>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="189" y="233"></point>
        <point x="219" y="188"></point>
        <point x="249" y="173"></point>
        <point x="279" y="188"></point>
        <point x="234" y="218"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="180" y="255"></point>
        <point x="150" y="210"></point>
        <point x="105" y="210"></point>
        <point x="75" y="240"></point>
        <point x="135" y="240"></point>
      </polygon>
    </shape>
    <shape name="house" rotatable="false" editableColorIndex="0">
      <rectangle endX="255" startY="120" marked="true" color="-1920102913" endY="285" startX="45" filled="true"></rectangle>
      <rectangle endX="180" startY="210" marked="false" color="255" endY="285" startX="120" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="120"></point>
        <point x="150" y="15"></point>
        <point x="285" y="120"></point>
      </polygon>
      <line endX="270" startY="120" marked="false" color="255" endY="120" startX="30"></line>
    </shape>
    <shape name="iron-atom" rotatable="true" editableColorIndex="0">
      <circle x="69" y="82" marked="true" color="-1920102913" diameter="136" filled="true"></circle>
    </shape>
    <shape name="iron-atom2" rotatable="true" editableColorIndex="6">
      <circle x="99" y="82" marked="false" color="-1920102913" diameter="136" filled="true"></circle>
    </shape>
    <shape name="leaf" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="210"></point>
        <point x="135" y="195"></point>
        <point x="120" y="210"></point>
        <point x="60" y="210"></point>
        <point x="30" y="195"></point>
        <point x="60" y="180"></point>
        <point x="60" y="165"></point>
        <point x="15" y="135"></point>
        <point x="30" y="120"></point>
        <point x="15" y="105"></point>
        <point x="40" y="104"></point>
        <point x="45" y="90"></point>
        <point x="60" y="90"></point>
        <point x="90" y="105"></point>
        <point x="105" y="120"></point>
        <point x="120" y="120"></point>
        <point x="105" y="60"></point>
        <point x="120" y="60"></point>
        <point x="135" y="30"></point>
        <point x="150" y="15"></point>
        <point x="165" y="30"></point>
        <point x="180" y="60"></point>
        <point x="195" y="60"></point>
        <point x="180" y="120"></point>
        <point x="195" y="120"></point>
        <point x="210" y="105"></point>
        <point x="240" y="90"></point>
        <point x="255" y="90"></point>
        <point x="263" y="104"></point>
        <point x="285" y="105"></point>
        <point x="270" y="120"></point>
        <point x="285" y="135"></point>
        <point x="240" y="165"></point>
        <point x="240" y="180"></point>
        <point x="270" y="195"></point>
        <point x="240" y="210"></point>
        <point x="180" y="210"></point>
        <point x="165" y="195"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="195"></point>
        <point x="135" y="240"></point>
        <point x="120" y="255"></point>
        <point x="105" y="255"></point>
        <point x="105" y="285"></point>
        <point x="135" y="285"></point>
        <point x="165" y="240"></point>
        <point x="165" y="195"></point>
      </polygon>
    </shape>
    <shape name="line" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="300" startX="150"></line>
    </shape>
    <shape name="oxygen-atom" rotatable="true" editableColorIndex="0">
      <circle x="47" y="98" marked="false" color="764264191" diameter="104" filled="true"></circle>
    </shape>
    <shape name="oxygen-molecule" rotatable="true" editableColorIndex="0">
      <circle x="43" y="96" marked="false" color="-684578305" diameter="108" filled="true"></circle>
      <circle x="42" y="95" marked="false" color="-528509185" diameter="110" filled="false"></circle>
      <circle x="133" y="96" marked="false" color="-684578305" diameter="108" filled="true"></circle>
      <circle x="132" y="95" marked="false" color="-528509185" diameter="110" filled="false"></circle>
    </shape>
    <shape name="pentagon" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="15"></point>
        <point x="15" y="120"></point>
        <point x="60" y="285"></point>
        <point x="240" y="285"></point>
        <point x="285" y="120"></point>
      </polygon>
    </shape>
    <shape name="person" rotatable="false" editableColorIndex="0">
      <circle x="110" y="5" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="120" y="195"></point>
        <point x="90" y="285"></point>
        <point x="105" y="300"></point>
        <point x="135" y="300"></point>
        <point x="150" y="225"></point>
        <point x="165" y="300"></point>
        <point x="195" y="300"></point>
        <point x="210" y="285"></point>
        <point x="180" y="195"></point>
        <point x="195" y="90"></point>
      </polygon>
      <rectangle endX="172" startY="79" marked="true" color="-1920102913" endY="94" startX="127" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="195" y="90"></point>
        <point x="240" y="150"></point>
        <point x="225" y="180"></point>
        <point x="165" y="105"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="60" y="150"></point>
        <point x="75" y="180"></point>
        <point x="135" y="105"></point>
      </polygon>
    </shape>
    <shape name="plant" rotatable="false" editableColorIndex="0">
      <rectangle endX="165" startY="90" marked="true" color="-1920102913" endY="300" startX="135" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="255"></point>
        <point x="90" y="210"></point>
        <point x="45" y="195"></point>
        <point x="75" y="255"></point>
        <point x="135" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="255"></point>
        <point x="210" y="210"></point>
        <point x="255" y="195"></point>
        <point x="225" y="255"></point>
        <point x="165" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="180"></point>
        <point x="90" y="135"></point>
        <point x="45" y="120"></point>
        <point x="75" y="180"></point>
        <point x="135" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="180"></point>
        <point x="165" y="210"></point>
        <point x="225" y="180"></point>
        <point x="255" y="120"></point>
        <point x="210" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="105"></point>
        <point x="90" y="60"></point>
        <point x="45" y="45"></point>
        <point x="75" y="105"></point>
        <point x="135" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="105"></point>
        <point x="165" y="135"></point>
        <point x="225" y="105"></point>
        <point x="255" y="45"></point>
        <point x="210" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="90"></point>
        <point x="120" y="45"></point>
        <point x="150" y="15"></point>
        <point x="180" y="45"></point>
        <point x="165" y="90"></point>
      </polygon>
    </shape>
    <shape name="rust-molecule" rotatable="true" editableColorIndex="6">
      <circle x="89" y="7" marked="false" color="-1920102913" diameter="136" filled="true"></circle>
      <circle x="89" y="7" marked="false" color="-1" diameter="136" filled="false"></circle>
      <circle x="89" y="157" marked="false" color="-1920102913" diameter="136" filled="true"></circle>
      <circle x="89" y="157" marked="false" color="-1" diameter="136" filled="false"></circle>
      <circle x="28" y="201" marked="false" color="-684578305" diameter="108" filled="true"></circle>
      <circle x="27" y="200" marked="false" color="-1" diameter="110" filled="false"></circle>
      <circle x="146" y="96" marked="false" color="-684578305" diameter="108" filled="true"></circle>
      <circle x="145" y="95" marked="false" color="-1" diameter="110" filled="false"></circle>
      <circle x="28" y="-9" marked="false" color="-684578305" diameter="108" filled="true"></circle>
      <circle x="27" y="-10" marked="false" color="-1" diameter="110" filled="false"></circle>
    </shape>
    <shape name="rust-molecule-boundary" rotatable="true" editableColorIndex="6">
      <circle x="89" y="7" marked="false" color="-1920102913" diameter="136" filled="true"></circle>
      <circle x="89" y="7" marked="false" color="-1" diameter="136" filled="false"></circle>
      <circle x="89" y="157" marked="false" color="-1920102913" diameter="136" filled="true"></circle>
      <circle x="89" y="157" marked="false" color="-1" diameter="136" filled="false"></circle>
      <circle x="28" y="201" marked="false" color="-684578305" diameter="108" filled="true"></circle>
      <circle x="27" y="200" marked="false" color="-1" diameter="110" filled="false"></circle>
      <circle x="146" y="96" marked="false" color="-684578305" diameter="108" filled="true"></circle>
      <circle x="145" y="95" marked="false" color="-1" diameter="110" filled="false"></circle>
      <circle x="28" y="-9" marked="false" color="-684578305" diameter="108" filled="true"></circle>
      <circle x="27" y="-10" marked="false" color="-1" diameter="110" filled="false"></circle>
      <circle x="-30" y="-30" marked="false" color="-244705793" diameter="360" filled="false"></circle>
    </shape>
    <shape name="square" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
    </shape>
    <shape name="square 2" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
      <rectangle endX="240" startY="60" marked="false" color="255" endY="240" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="star" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="151" y="1"></point>
        <point x="185" y="108"></point>
        <point x="298" y="108"></point>
        <point x="207" y="175"></point>
        <point x="242" y="282"></point>
        <point x="151" y="216"></point>
        <point x="59" y="282"></point>
        <point x="94" y="175"></point>
        <point x="3" y="108"></point>
        <point x="116" y="108"></point>
      </polygon>
    </shape>
    <shape name="target" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <circle x="60" y="60" marked="true" color="-1920102913" diameter="180" filled="true"></circle>
      <circle x="90" y="90" marked="false" color="255" diameter="120" filled="true"></circle>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
    </shape>
    <shape name="tree" rotatable="false" editableColorIndex="0">
      <circle x="118" y="3" marked="true" color="-1920102913" diameter="94" filled="true"></circle>
      <rectangle endX="180" startY="195" marked="false" color="-1653716737" endY="300" startX="120" filled="true"></rectangle>
      <circle x="65" y="21" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="116" y="41" marked="true" color="-1920102913" diameter="127" filled="true"></circle>
      <circle x="45" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
      <circle x="104" y="74" marked="true" color="-1920102913" diameter="152" filled="true"></circle>
    </shape>
    <shape name="triangle" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
    </shape>
    <shape name="triangle 2" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="151" y="99"></point>
        <point x="225" y="223"></point>
        <point x="75" y="224"></point>
      </polygon>
    </shape>
    <shape name="truck" rotatable="false" editableColorIndex="0">
      <rectangle endX="195" startY="45" marked="true" color="-1920102913" endY="187" startX="4" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="296" y="193"></point>
        <point x="296" y="150"></point>
        <point x="259" y="134"></point>
        <point x="244" y="104"></point>
        <point x="208" y="104"></point>
        <point x="207" y="194"></point>
      </polygon>
      <rectangle endX="195" startY="60" marked="false" color="-1" endY="105" startX="195" filled="true"></rectangle>
      <polygon color="255" filled="true" marked="false">
        <point x="238" y="112"></point>
        <point x="252" y="141"></point>
        <point x="219" y="141"></point>
        <point x="218" y="112"></point>
      </polygon>
      <circle x="234" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <rectangle endX="214" startY="185" marked="true" color="-1920102913" endY="194" startX="181" filled="true"></rectangle>
      <circle x="144" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="144" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="234" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
    </shape>
    <shape name="turtle" rotatable="true" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="215" y="204"></point>
        <point x="240" y="233"></point>
        <point x="246" y="254"></point>
        <point x="228" y="266"></point>
        <point x="215" y="252"></point>
        <point x="193" y="210"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="195" y="90"></point>
        <point x="225" y="75"></point>
        <point x="245" y="75"></point>
        <point x="260" y="89"></point>
        <point x="269" y="108"></point>
        <point x="261" y="124"></point>
        <point x="240" y="105"></point>
        <point x="225" y="105"></point>
        <point x="210" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="105" y="90"></point>
        <point x="75" y="75"></point>
        <point x="55" y="75"></point>
        <point x="40" y="89"></point>
        <point x="31" y="108"></point>
        <point x="39" y="124"></point>
        <point x="60" y="105"></point>
        <point x="75" y="105"></point>
        <point x="90" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="132" y="85"></point>
        <point x="134" y="64"></point>
        <point x="107" y="51"></point>
        <point x="108" y="17"></point>
        <point x="150" y="2"></point>
        <point x="192" y="18"></point>
        <point x="192" y="52"></point>
        <point x="169" y="65"></point>
        <point x="172" y="87"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="85" y="204"></point>
        <point x="60" y="233"></point>
        <point x="54" y="254"></point>
        <point x="72" y="266"></point>
        <point x="85" y="252"></point>
        <point x="107" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="119" y="75"></point>
        <point x="179" y="75"></point>
        <point x="209" y="101"></point>
        <point x="224" y="135"></point>
        <point x="220" y="225"></point>
        <point x="175" y="261"></point>
        <point x="128" y="261"></point>
        <point x="81" y="224"></point>
        <point x="74" y="135"></point>
        <point x="88" y="99"></point>
      </polygon>
    </shape>
    <shape name="water molecule" rotatable="true" editableColorIndex="0">
      <circle x="103" y="73" marked="false" color="-1" diameter="62" filled="true"></circle>
      <circle x="133" y="96" marked="false" color="764264191" diameter="108" filled="true"></circle>
      <circle x="132" y="95" marked="false" color="878553599" diameter="110" filled="false"></circle>
      <circle x="103" y="163" marked="false" color="-1" diameter="62" filled="true"></circle>
      <circle x="103" y="163" marked="true" color="-1920102913" diameter="62" filled="false"></circle>
    </shape>
    <shape name="wheel" rotatable="false" editableColorIndex="0">
      <circle x="3" y="3" marked="true" color="-1920102913" diameter="294" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <line endX="150" startY="285" marked="true" color="-1920102913" endY="15" startX="150"></line>
      <line endX="285" startY="150" marked="true" color="-1920102913" endY="150" startX="15"></line>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
      <line endX="79" startY="40" marked="true" color="-1920102913" endY="269" startX="216"></line>
      <line endX="269" startY="84" marked="true" color="-1920102913" endY="221" startX="40"></line>
      <line endX="269" startY="216" marked="true" color="-1920102913" endY="79" startX="40"></line>
      <line endX="221" startY="40" marked="true" color="-1920102913" endY="269" startX="84"></line>
    </shape>
    <shape name="x" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="270" y="75"></point>
        <point x="225" y="30"></point>
        <point x="30" y="225"></point>
        <point x="75" y="270"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="75"></point>
        <point x="75" y="30"></point>
        <point x="270" y="225"></point>
        <point x="225" y="270"></point>
      </polygon>
    </shape>
  </turtleShapes>
  <linkShapes>
    <shape name="default" curviness="0.0">
      <lines>
        <line x="-0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
        <line x="0.0" visible="true">
          <dash value="1.0"></dash>
          <dash value="0.0"></dash>
        </line>
        <line x="0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
      </lines>
      <indicator>
        <shape name="link direction" rotatable="true" editableColorIndex="0">
          <line endX="90" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
          <line endX="210" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
        </shape>
      </indicator>
    </shape>
  </linkShapes>
  <previewCommands>setup repeat 75 [ go ]</previewCommands>
</model>
