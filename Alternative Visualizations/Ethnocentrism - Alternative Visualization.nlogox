<?xml version="1.0" encoding="utf-8"?>
<model version="NetLogo 7.0.0-beta2" snapToGrid="true">
  <code><![CDATA[;; agents have a probablity to reproduce and a strategy
turtles-own [ ptr cooperate-with-same? cooperate-with-different? ]

globals [
  ;; the remaining variables support the replication of published experiments
  meet                  ;; how many interactions occurred this turn
  meet-agg              ;; how many interactions occurred through the run
  last100meet           ;; meet for the last 100 ticks
  meetown               ;; what number of individuals met someone of their own color this turn
  meetown-agg           ;; what number of individuals met someone of their own color throughout the run
  last100meetown        ;; meetown for the last 100 ticks
  meetother             ;; what number of individuals met someone of a different color this turn
  meetother-agg         ;; what number of individuals met someone of a different color throughout the run
  last100meetother      ;; meetother for the last 100 ticks
  coopown               ;; how many interactions this turn were cooperating with the same color
  coopown-agg           ;; how many interactions throughout the run were cooperating with the same color
  last100coopown        ;; coopown for the last 100 ticks
  coopother             ;; how many interactions this turn were cooperating with a different color
  coopother-agg         ;; how many interactions throughout the run were cooperating with a different color
  defother              ;; how many interactions this turn were defecting with a different color
  defother-agg          ;; how many interactions throughout the run were defecting with a different color
  last100defother       ;; defother for the last 100 ticks
  last100cc             ;; how many cooperate-cooperate genotypes have there been in the last 100 ticks
  last100cd             ;; how many cooperate-defect genotypes have there been in the last 100 ticks
  last100dc             ;; how many defect-cooperate genotypes have there been in the last 100 ticks
  last100dd             ;; how many defect-defect genotypes have there been in the last 100 ticks
  last100consist-ethno  ;; how many interactions consistent with ethnocentrism in the last 100 ticks
  last100coop           ;; how many interactions have been cooperation in the last 100 ticks
]

to setup-empty
  clear-all
  initialize-variables
  reset-ticks
end

;; creates a world with an agent on each patch
to setup-full
  clear-all
  initialize-variables
  ask patches [ create-turtle ]
  reset-ticks
end

to initialize-variables
  ;; initialize all the variables
  set meetown 0
  set meetown-agg 0
  set meet 0
  set meet-agg 0
  set coopown 0
  set coopown-agg 0
  set defother 0
  set defother-agg 0
  set meetother 0
  set meetother-agg 0
  set coopother 0
  set coopother-agg 0
  set last100dd []
  set last100cd []
  set last100cc []
  set last100dc []
  set last100coopown []
  set last100defother []
  set last100consist-ethno []
  set last100meetown []
  set last100meetother []
  set last100meet []
  set last100coop []
end

;; creates a new agent in the world
to create-turtle  ;; patch procedure
  sprout 1 [
    set color random-color
    ;; determine the strategy for interacting with someone of the same color
    set cooperate-with-same? (random-float 1.0 < immigrant-chance-cooperate-with-same)
    ;; determine the strategy for interacting with someone of a different color
    set cooperate-with-different? (random-float 1.0 < immigrant-chance-cooperate-with-different)
    ;; change the shape of the agent on the basis of the strategy
    update-shape
  ]
end

to-report random-color
  report one-of [red blue yellow green]
end

;; this is used to clear stats that change between each tick
to clear-stats
  set meetown 0
  set meet 0
  set coopown 0
  set defother 0
  set meetother 0
  set coopother 0
end

;; the main routine
to go
  clear-stats     ;; clear the turn based stats
  immigrate       ;; new agents immigrate into the world

  ;; reset the probability to reproduce
  ask turtles [ set ptr initial-ptr ]

  ;; have all of the agents interact with other agents if they can
  ask turtles [ interact ]
  ;; now they reproduce
  ask turtles [ reproduce ]
  death           ;; kill some of the agents
  update-stats    ;; update the states for the aggregate and last 100 ticks
  tick
end

;; random individuals enter the world on empty cells
to immigrate
  let empty-patches patches with [not any? turtles-here]
  ;; we can't have more immigrants than there are empty patches
  let how-many min list immigrants-per-day (count empty-patches)
  ask n-of how-many empty-patches [ create-turtle ]
end

to interact  ;; turtle procedure

  ;; interact with Von Neumann neighborhood
  ask turtles-on neighbors4 [
    ;; the commands inside the ASK are written from the point of view
    ;; of the agent being interacted with.  To refer back to the agent
    ;; that initiated the interaction, we use the MYSELF primitive.
    set meet meet + 1
    set meet-agg meet-agg + 1
    ;; do one thing if the individual interacting is the same color as me
    if color = [color] of myself [
      ;; record the fact the agent met someone of the own color
      set meetown meetown + 1
      set meetown-agg meetown-agg + 1
      ;; if I cooperate then I reduce my PTR and increase my neighbors
      if [cooperate-with-same?] of myself [
        set coopown coopown + 1
        set coopown-agg coopown-agg + 1
        ask myself [ set ptr ptr - cost-of-giving ]
        set ptr ptr + gain-of-receiving
      ]
    ]
    ;; if we are different colors we take a different strategy
    if color != [color] of myself [
      ;; record stats on encounters
      set meetother meetother + 1
      set meetother-agg meetother-agg + 1
      ;; if we cooperate with different colors then reduce our PTR and increase our neighbors
      ifelse [cooperate-with-different?] of myself [
        set coopother coopother + 1
        set coopother-agg coopother-agg + 1
        ask myself [ set ptr ptr - cost-of-giving ]
        set ptr ptr + gain-of-receiving
      ]
      [
        set defother defother + 1
        set defother-agg defother-agg + 1
      ]
    ]
  ]
end

;; use PTR to determine if the agent gets to reproduce
to reproduce  ;; turtle procedure
  ;; if a random variable is less than the PTR the agent can reproduce
  if random-float 1.0 < ptr [
    ;; find an empty location to reproduce into
    let destination one-of neighbors4 with [not any? turtles-here]
    if destination != nobody [
      ;; if the location exists hatch a copy of the current turtle in the new location
      ;;  but mutate the child
      hatch 1 [
        move-to destination
        mutate
      ]
    ]
  ]
end

;; modify the children of agents according to the mutation rate
to mutate  ;; turtle procedure
  ;; mutate the color
  if random-float 1.0 < mutation-rate [
    let old-color color
    while [color = old-color]
      [ set color random-color ]
  ]
  ;; mutate the strategy flags;
  ;; use NOT to toggle the flag
  if random-float 1.0 < mutation-rate [
    set cooperate-with-same? not cooperate-with-same?
  ]
  if random-float 1.0 < mutation-rate [
    set cooperate-with-different? not cooperate-with-different?
  ]
  ;; make sure the shape of the agent reflects its strategy
  update-shape
end

to death
  ;; check to see if a random variable is less than the death rate for each agent
  ask turtles [
    if random-float 1.0 < death-rate [ die ]
  ]
end


;; make sure the shape matches the strategy
to update-shape

  ifelse cooperate-with-same? [
    ifelse cooperate-with-different?
      ;; if the agent cooperates with same and difeerent, it is an altruist, and gets the "a" shape
      [ set shape "hline" ]    ;; altruist
      ; if the agent cooperates with same but not with different, it is ethnocentric, and gets the "c" shape
      [ set shape "vline" ]  ;; ethnocentric
  ]

  [
    ifelse cooperate-with-different?
    ;; if the agent doesn't cooperate with same but does cooperate with different, it is cosmopolitan and gets the "v" shape
      [ set shape "cross 2" ]    ;; cosmopolitan
      ; if the agent doesn't cooperate with same or different, it is an egoist and gets the "t" shape
      [ set shape "dot" ]  ;; egoist
  ]
end



;; this routine calculates a moving average of some stats over the last 100 ticks
to update-stats
  set last100dd        shorten lput (count turtles with [shape = "square 2"]) last100dd
  set last100cc        shorten lput (count turtles with [shape = "circle"]) last100cc
  set last100cd        shorten lput (count turtles with [shape = "circle 2"]) last100cd
  set last100dc        shorten lput (count turtles with [shape = "square"]) last100dc
  set last100coopown   shorten lput coopown last100coopown
  set last100defother  shorten lput defother last100defother
  set last100meetown   shorten lput meetown last100meetown
  set last100coop      shorten lput (coopown + coopother) last100coop
  set last100meet      shorten lput meet last100meet
  set last100meetother shorten lput meetother last100meetother
end

;; this is used to keep all of the last100 lists the right length
to-report shorten [the-list]
  ifelse length the-list > 100
    [ report butfirst the-list ]
    [ report the-list ]
end

;; these are used in the BehaviorSpace experiments

to-report meetown-percent
  report meetown / max list 1 meet
end
to-report meetown-agg-percent
  report meetown-agg / max list 1 meet-agg
end
to-report coopown-percent
  report coopown / max list 1 meetown
end
to-report coopown-agg-percent
  report coopown-agg / max list 1 meetown-agg
end
to-report defother-percent
  report defother / max list 1 meetother
end
to-report defother-agg-percent
  report defother-agg / max list 1 meetother-agg
end
to-report consist-ethno-percent
  report (defother + coopown) / (max list 1 meet )
end
to-report consist-ethno-agg-percent
  report (defother-agg + coopown-agg) / (max list 1 meet-agg )
end
to-report coop-percent
  report (coopown + coopother) / (max list 1 meet )
end
to-report coop-agg-percent
  report (coopown-agg + coopother-agg) / (max list 1 meet-agg)
end
to-report cc-count
  report sum last100cc / max list 1 length last100cc
end
to-report cd-count
  report sum last100cd / max list 1 length last100cd
end
to-report dc-count
  report sum last100dc / max list 1 length last100dc
end
to-report dd-count
  report sum last100dd / max list 1 length last100dd
end
to-report cc-percent
  report cc-count / (max list 1 (cc-count + cd-count + dc-count + dd-count))
end
to-report cd-percent
  report cd-count / (max list 1 (cc-count + cd-count + dc-count + dd-count))
end
to-report dc-percent
  report dc-count / (max list 1 (cc-count + cd-count + dc-count + dd-count))
end
to-report dd-percent
  report dd-count / (max list 1 (cc-count + cd-count + dc-count + dd-count))
end
to-report last100coopown-percent
  report sum last100coopown / max list 1 sum last100meetown
end
to-report last100defother-percent
  report sum last100defother / max list 1 sum last100meetother
end
to-report last100consist-ethno-percent
  report (sum last100defother + sum last100coopown) / max list 1 sum last100meet
end
to-report last100meetown-percent
  report sum last100meetown / max list 1 sum last100meet
end
to-report last100coop-percent
  report sum last100coop / max list 1 sum last100meet
end


; Copyright 2003 Uri Wilensky.
; See Info tab for full copyright and license.]]></code>
  <widgets>
    <view x="350" wrappingAllowedX="true" y="20" frameRate="30.0" minPycor="0" height="514" showTickCounter="true" patchSize="10.0" fontSize="10" wrappingAllowedY="true" width="514" tickCounterLabel="ticks" maxPycor="50" updateMode="1" maxPxcor="50" minPxcor="0"></view>
    <slider x="10" step="0.0010" y="185" max="1.0" display="mutation-rate" height="33" min="0.0" direction="Horizontal" default="0.005" variable="mutation-rate" width="166" sizeVersion="0"></slider>
    <slider x="10" step="0.05" y="220" max="1.0" display="death-rate" height="33" min="0.0" direction="Horizontal" default="0.1" variable="death-rate" width="166" sizeVersion="0"></slider>
    <slider x="10" step="1.0" y="255" max="100.0" display="immigrants-per-day" height="33" min="0.0" direction="Horizontal" default="1.0" variable="immigrants-per-day" width="166" sizeVersion="0"></slider>
    <slider x="180" step="0.01" y="185" max="1.0" display="initial-PTR" height="33" min="0.0" direction="Horizontal" default="0.12" variable="initial-PTR" width="155" sizeVersion="0"></slider>
    <slider x="180" step="0.01" y="220" max="1.0" display="cost-of-giving" height="33" min="0.0" direction="Horizontal" default="0.01" variable="cost-of-giving" width="155" sizeVersion="0"></slider>
    <slider x="180" step="0.01" y="255" max="1.0" display="gain-of-receiving" height="33" min="0.0" direction="Horizontal" default="0.03" variable="gain-of-receiving" width="155" sizeVersion="0"></slider>
    <button x="19" y="24" height="33" disableUntilTicks="false" forever="false" kind="Observer" display="setup empty" width="108" sizeVersion="0">setup-empty</button>
    <button x="220" y="24" height="33" disableUntilTicks="true" forever="true" kind="Observer" width="73" sizeVersion="0">go</button>
    <plot x="10" autoPlotX="true" yMax="1.0" autoPlotY="true" yAxis="count" y="360" xMin="0.0" height="202" legend="true" xMax="10.0" yMin="0.0" xAxis="time" display="Strategy Counts" width="325" sizeVersion="0">
      <setup></setup>
      <update></update>
      <pen interval="1.0" mode="0" display="CC" color="-10899396" legend="true">
        <setup></setup>
        <update>plotxy ticks count turtles with [shape = "circle"]</update>
      </pen>
      <pen interval="1.0" mode="0" display="CD" color="-2674135" legend="true">
        <setup></setup>
        <update>plotxy ticks count turtles with [shape = "circle 2"]</update>
      </pen>
      <pen interval="1.0" mode="0" display="DC" color="-4079321" legend="true">
        <setup></setup>
        <update>plotxy ticks count turtles with [shape = "square"]</update>
      </pen>
      <pen interval="1.0" mode="0" display="DD" color="-16777216" legend="true">
        <setup></setup>
        <update>plotxy ticks count turtles with [shape = "square 2"]</update>
      </pen>
    </plot>
    <button x="129" y="24" height="33" disableUntilTicks="false" forever="false" kind="Observer" display="setup full" width="89" sizeVersion="0">setup-full</button>
    <slider x="10" step="0.01" y="290" max="1.0" display="immigrant-chance-cooperate-with-same" height="33" min="0.0" direction="Horizontal" default="0.5" variable="immigrant-chance-cooperate-with-same" width="325" sizeVersion="0"></slider>
    <slider x="10" step="0.01" y="324" max="1.0" display="immigrant-chance-cooperate-with-different" height="33" min="0.0" direction="Horizontal" default="0.5" variable="immigrant-chance-cooperate-with-different" width="325" sizeVersion="0"></slider>
    <note x="4" y="80" height="102" textColorLight="-16777216" fontSize="11" width="330" markdown="false">Horizontal lines are altruists - cooperate with everyone
Vertical lines are ethnocentric - cooperate with same,
not with different
Crosses are cosmopolitan - cooperate with different,
 not with same
Dots are egoists - cooperate with no one
</note>
  </widgets>
  <info><![CDATA[## ACKNOWLEDGMENT

This model is an alternate visualization of the Ethnocentrism model from the Social Science section of the NetLogo Models Library. It uses visualization techniques as recommended in the paper:

* Kornhauser, D., Wilensky, U., & Rand, W. (2009). Design guidelines for agent based model visualization. Journal of Artificial Societies and Social Simulation (JASSS), 12(2), 1. http://ccl.northwestern.edu/papers/2009/Kornhauser,Wilensky&Rand_DesignGuidelinesABMViz.pdf.

## WHAT IS IT?

This model, due to Robert Axelrod and Ross A. Hammond, suggests that "ethnocentric" behavior can evolve under a wide variety of conditions, even when there are no native "ethnocentrics" and no way to differentiate between agent types.  Agents compete for limited space via Prisoner Dilemma's type interactions. "Ethnocentric" agents treat agents within their group more beneficially than those outside their group.  The model includes a mechanism for inheritance (genetic or cultural) of strategies. This version is an alternate visualization of the model.

In this alternate visualization of the model, different shapes are used to combat visual interference, such as color-over-shape, hue- on-form and hue-on-texture interferences. There are several key features to distinguish in this visualization, mainly shape and color. The original model contains four shapes: squares, hollow squares, circles, and hollow circles. In this model, they were replaced by crosses, dots, horizontal lines, and vertical lines. It was originally unfeasible to group the squares (filled square and hollow squares) due to the difference of luminosity between the hollow and filled shapes. The creation of textures allows the viewer to distinguish color and shape independently. However, This redesign does not solve all the issues of this model, it still suffers from other interferences such as hue on texture.

In the original model it is very hard to group the agents by shape or color due to color-over-shape and hue-on-form interference. In this alternate visualization, very distinct shapes with relatively equal “ink area” were chosen to make it easier to discriminate by shape or color.

## HOW IT WORKS

Each agent has three traits: a) color, b) whether they cooperate with same colored agents, and c) whether they cooperate with different colored agents.  An "ethnocentric" agent is one which cooperates with same colored agents, but does not cooperate with different colored agents. An "altruist" cooperates with all agents, while an "egoist" cooperates with no one.  A "cosmopolitan" cooperates with agents of a different color but not of their own color.

At each time step, the following events occur:

1. Up to IMMIGRANTS-PER-DAY, new agents appear in random locations with random traits.

2. Agents start with an INITIAL-PTR (Potential-To-Reproduce) chance of reproducing.  Each pair of adjacent agents interact in a one-move Prisoner's Dilemma in which each chooses whether or not to help the other.  They either gain, or lose some of their potential to reproduce.

3. In random order, each agent is given a chance to reproduce.  Offspring have the same traits as their parents, with a MUTATION-RATE chance of each trait mutating.  Agents are only allowed to reproduce if there is an empty space next to them.  Each agent's birth-rate is reset to the INITIAL-PTR.

4. The agent has a DEATH-RATE chance of dying, making room for future offspring and immigrants.

## HOW TO USE IT

To prepare the simulation for a new run, press SETUP EMPTY.  Press GO to start the simulation running, press GO again to stop it.

SETUP FULL will allow you to start with a full world of random agents.

COST-OF-GIVING indicates how much it costs an agent to cooperate with another agent.

GAIN-OF-RECEIVING indicates how much an agent gains if another agent cooperates with them.

IMMIGRANT-CHANCE-COOPERATE-WITH-SAME indicates the probability that an immigrating agent will have the COOPERATE-WITH-SAME? variable set to true.

IMMIGRANT-CHANCE-COOPERATE-WITH-DIFFERENT indicates the probability that an immigrating agent will have the COOPERATE-WITH-DIFFERENT? variable set to true.

The STRATEGY COUNTS plot tracks the number of agents that utilize a given cooperation strategy:

CC --- People who cooperate with everyone
CD --- People who cooperate only with people of the same type
DD --- People who do not cooperate with anyone
DC --- People who only cooperate with people of different types

## THINGS TO NOTICE

Agents appear as horizontal lines if they are altruists (CC). They appear as vertical lines if they are ethnocentric (CD). They appear as crosses if they are cosmopolitan (DC). They appear as dots if they are egoists (DD).

Observe the interaction along the edge of a group of ethnocentric agents, and non-ethnocentric agents.  What behaviors do you see?  Is one more stable?  Does one expand into the other group?

Observe the STRATEGY COUNTS plot.  Does one strategy occur more than others?  What happens when we change the model?

## THINGS TO TRY

Set the IMMIGRANT-CHANCE-COOPERATE sliders both to 1.0.  This means there are only altruists created.  Do ethnocentrics and other strategies ever evolve?  Do they ever out compete the altruists?

Change the values of COST-OF-GIVING and GAIN-OF-RECEIVING and observe the effects on the model and the level of ethnocentricity.

This model comes with a group of BehaviorSpace experiments defined.  You can access them by choosing BehaviorSpace on the Tools menu.  These are the original experiments that Axelrod and Hammond ran to test the robustness of this model. These experiments vary lots of parameters like the size of the world, IMMIGRANTS-PER-DAY and COST-OF-GIVING.  These experiments are detailed at   http://www-personal.umich.edu/~axe/Shared_Files/Axelrod.Hammond/index.htm

## EXTENDING THE MODEL

Add more colors to the model.  Does the behavior change?

Make some patches richer than others, so that agents on them have a higher chance of reproducing.  Distribute this advantage across the world in different ways such as randomly, in blobs, or in quarters.

Tag patches with a color.  distribute the colors across the world in different ways: blobs, randomly, in discrete quarters.  Agents use the patch color under other agents to determine whether to cooperate with them or not.

## NETLOGO FEATURES

To ensure fairness, the agents should run in random order.  Agentsets in NetLogo are always in random order, so no extra code is needed to achieve this.

## RELATED MODELS

 * Ethnocentrism
 * Segregation
 * PD Basic

## CREDITS AND REFERENCES

This model is a NetLogo version of the ethnocentrism model presented by Robert Axelrod at Northwestern University at the NICO (Northwestern Institute on Complex Systems) conference on October 25th, 2003.

See also Ross A. Hammond and Robert Axelrod, The Evolution of Ethnocentrism, http://www-personal.umich.edu/~axe/research/AxHamm_Ethno.pdf

The alternate visualization is based on:
 Kornhauser, D., Wilensky, U., & Rand, W. (2009). Design guidelines for agent based model visualization. Journal of Artificial Societies and Social Simulation, JASSS, 12(2), 1.
http://ccl.northwestern.edu/papers/2009/Kornhauser,Wilensky&Rand_DesignGuidelinesABMViz.pdf .

This work is based on the visualization guidelines found in:
Healey, C. (2006). Perception in Visualization.
https://www.csc2.ncsu.edu/faculty/healey/PP/

## HOW TO CITE

If you mention this model or the NetLogo software in a publication, we ask that you include the citations below.

For the model itself:

* Wilensky, U. (2003).  NetLogo Ethnocentrism - Alternative Visualization model.  http://ccl.northwestern.edu/netlogo/models/Ethnocentrism-AlternativeVisualization.  Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

Please cite the NetLogo software as:

* Wilensky, U. (1999). NetLogo. http://ccl.northwestern.edu/netlogo/. Center for Connected Learning and Computer-Based Modeling, Northwestern University, Evanston, IL.

## COPYRIGHT AND LICENSE

Copyright 2003 Uri Wilensky.

![CC BY-NC-SA 3.0](http://ccl.northwestern.edu/images/creativecommons/byncsa.png)

This model is licensed under the Creative Commons Attribution-NonCommercial-ShareAlike 3.0 License.  To view a copy of this license, visit https://creativecommons.org/licenses/by-nc-sa/3.0/ or send a letter to Creative Commons, 559 Nathan Abbott Way, Stanford, California 94305, USA.

NetLogo itself is free software for non-commercial use under the terms of the GNU General Public License ([see full license information here](https://ccl.northwestern.edu/netlogo/docs/copyright.html)).

To inquire about commercial licenses for either NetLogo or specific models from the models library, please contact netlogo-commercial-admin@ccl.northwestern.edu.

This model was created as part of the projects: PARTICIPATORY SIMULATIONS: NETWORK-BASED DESIGN FOR SYSTEMS LEARNING IN CLASSROOMS and/or INTEGRATED SIMULATION AND MODELING ENVIRONMENT. The project gratefully acknowledges the support of the National Science Foundation (REPP & ROLE programs) -- grant numbers REC #9814682 and REC-0126227.

<!-- 2003 -->]]></info>
  <turtleShapes>
    <shape name="default" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="5"></point>
        <point x="40" y="250"></point>
        <point x="150" y="205"></point>
        <point x="260" y="250"></point>
      </polygon>
    </shape>
    <shape name="a" rotatable="false" editableColorIndex="0">
      <line endX="150" startY="210" marked="true" color="-1920102913" endY="60" startX="30"></line>
      <line endX="270" startY="60" marked="true" color="-1920102913" endY="210" startX="150"></line>
      <line endX="270" startY="210" marked="true" color="-1920102913" endY="210" startX="30"></line>
    </shape>
    <shape name="airplane" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="135" y="15"></point>
        <point x="120" y="60"></point>
        <point x="120" y="105"></point>
        <point x="15" y="165"></point>
        <point x="15" y="195"></point>
        <point x="120" y="180"></point>
        <point x="135" y="240"></point>
        <point x="105" y="270"></point>
        <point x="120" y="285"></point>
        <point x="150" y="270"></point>
        <point x="180" y="285"></point>
        <point x="210" y="270"></point>
        <point x="165" y="240"></point>
        <point x="180" y="180"></point>
        <point x="285" y="195"></point>
        <point x="285" y="165"></point>
        <point x="180" y="105"></point>
        <point x="180" y="60"></point>
        <point x="165" y="15"></point>
      </polygon>
    </shape>
    <shape name="arrow" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="0"></point>
        <point x="0" y="150"></point>
        <point x="105" y="150"></point>
        <point x="105" y="293"></point>
        <point x="195" y="293"></point>
        <point x="195" y="150"></point>
        <point x="300" y="150"></point>
      </polygon>
    </shape>
    <shape name="box" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="285"></point>
        <point x="285" y="225"></point>
        <point x="285" y="75"></point>
        <point x="150" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="135"></point>
        <point x="15" y="75"></point>
        <point x="150" y="15"></point>
        <point x="285" y="75"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="75"></point>
        <point x="15" y="225"></point>
        <point x="150" y="285"></point>
        <point x="150" y="135"></point>
      </polygon>
      <line endX="150" startY="285" marked="false" color="255" endY="135" startX="150"></line>
      <line endX="15" startY="135" marked="false" color="255" endY="75" startX="150"></line>
      <line endX="285" startY="135" marked="false" color="255" endY="75" startX="150"></line>
    </shape>
    <shape name="bug" rotatable="true" editableColorIndex="0">
      <circle x="96" y="182" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="110" y="127" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <circle x="110" y="75" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <line endX="80" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
      <line endX="220" startY="100" marked="true" color="-1920102913" endY="30" startX="150"></line>
    </shape>
    <shape name="butterfly" rotatable="true" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="209" y="199"></point>
        <point x="225" y="225"></point>
        <point x="225" y="255"></point>
        <point x="195" y="270"></point>
        <point x="165" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="165"></point>
        <point x="89" y="198"></point>
        <point x="75" y="225"></point>
        <point x="75" y="255"></point>
        <point x="105" y="270"></point>
        <point x="135" y="255"></point>
        <point x="150" y="240"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="139" y="148"></point>
        <point x="100" y="105"></point>
        <point x="55" y="90"></point>
        <point x="25" y="90"></point>
        <point x="10" y="105"></point>
        <point x="10" y="135"></point>
        <point x="25" y="180"></point>
        <point x="40" y="195"></point>
        <point x="85" y="194"></point>
        <point x="139" y="163"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="162" y="150"></point>
        <point x="200" y="105"></point>
        <point x="245" y="90"></point>
        <point x="275" y="90"></point>
        <point x="290" y="105"></point>
        <point x="290" y="135"></point>
        <point x="275" y="180"></point>
        <point x="260" y="195"></point>
        <point x="215" y="195"></point>
        <point x="162" y="165"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="135" y="225"></point>
        <point x="120" y="150"></point>
        <point x="135" y="120"></point>
        <point x="150" y="105"></point>
        <point x="165" y="120"></point>
        <point x="180" y="150"></point>
        <point x="165" y="225"></point>
      </polygon>
      <circle x="135" y="90" marked="false" color="255" diameter="30" filled="true"></circle>
      <line endX="195" startY="105" marked="false" color="255" endY="60" startX="150"></line>
      <line endX="105" startY="105" marked="false" color="255" endY="60" startX="150"></line>
    </shape>
    <shape name="c" rotatable="false" editableColorIndex="0">
      <line endX="15" startY="60" marked="true" color="-1920102913" endY="60" startX="225"></line>
      <line endX="15" startY="60" marked="true" color="-1920102913" endY="240" startX="15"></line>
      <line endX="225" startY="240" marked="true" color="-1920102913" endY="240" startX="15"></line>
    </shape>
    <shape name="car" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="300" y="180"></point>
        <point x="279" y="164"></point>
        <point x="261" y="144"></point>
        <point x="240" y="135"></point>
        <point x="226" y="132"></point>
        <point x="213" y="106"></point>
        <point x="203" y="84"></point>
        <point x="185" y="63"></point>
        <point x="159" y="50"></point>
        <point x="135" y="50"></point>
        <point x="75" y="60"></point>
        <point x="0" y="150"></point>
        <point x="0" y="165"></point>
        <point x="0" y="225"></point>
        <point x="300" y="225"></point>
        <point x="300" y="180"></point>
      </polygon>
      <circle x="180" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <circle x="30" y="180" marked="false" color="255" diameter="90" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="162" y="80"></point>
        <point x="132" y="78"></point>
        <point x="134" y="135"></point>
        <point x="209" y="135"></point>
        <point x="194" y="105"></point>
        <point x="189" y="96"></point>
        <point x="180" y="89"></point>
      </polygon>
      <circle x="47" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
      <circle x="195" y="195" marked="true" color="-1920102913" diameter="58" filled="true"></circle>
    </shape>
    <shape name="circle" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
    </shape>
    <shape name="circle 2" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
    </shape>
    <shape name="cow" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="200" y="193"></point>
        <point x="197" y="249"></point>
        <point x="179" y="249"></point>
        <point x="177" y="196"></point>
        <point x="166" y="187"></point>
        <point x="140" y="189"></point>
        <point x="93" y="191"></point>
        <point x="78" y="179"></point>
        <point x="72" y="211"></point>
        <point x="49" y="209"></point>
        <point x="48" y="181"></point>
        <point x="37" y="149"></point>
        <point x="25" y="120"></point>
        <point x="25" y="89"></point>
        <point x="45" y="72"></point>
        <point x="103" y="84"></point>
        <point x="179" y="75"></point>
        <point x="198" y="76"></point>
        <point x="252" y="64"></point>
        <point x="272" y="81"></point>
        <point x="293" y="103"></point>
        <point x="285" y="121"></point>
        <point x="255" y="121"></point>
        <point x="242" y="118"></point>
        <point x="224" y="167"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="73" y="210"></point>
        <point x="86" y="251"></point>
        <point x="62" y="249"></point>
        <point x="48" y="208"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="25" y="114"></point>
        <point x="16" y="195"></point>
        <point x="9" y="204"></point>
        <point x="23" y="213"></point>
        <point x="25" y="200"></point>
        <point x="39" y="123"></point>
      </polygon>
    </shape>
    <shape name="cross 2" rotatable="false" editableColorIndex="14">
      <polygon color="255" filled="true" marked="true">
        <point x="315" y="285"></point>
        <point x="270" y="330"></point>
        <point x="-30" y="15"></point>
        <point x="15" y="-30"></point>
      </polygon>
      <polygon color="255" filled="true" marked="true">
        <point x="-15" y="285"></point>
        <point x="30" y="330"></point>
        <point x="330" y="15"></point>
        <point x="285" y="-30"></point>
      </polygon>
    </shape>
    <shape name="cylinder" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
    </shape>
    <shape name="dot" rotatable="false" editableColorIndex="0">
      <circle x="90" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
    </shape>
    <shape name="dot2" rotatable="false" editableColorIndex="0">
      <circle x="90" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
    </shape>
    <shape name="face happy" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="255"></point>
        <point x="90" y="239"></point>
        <point x="62" y="213"></point>
        <point x="47" y="191"></point>
        <point x="67" y="179"></point>
        <point x="90" y="203"></point>
        <point x="109" y="218"></point>
        <point x="150" y="225"></point>
        <point x="192" y="218"></point>
        <point x="210" y="203"></point>
        <point x="227" y="181"></point>
        <point x="251" y="194"></point>
        <point x="236" y="217"></point>
        <point x="212" y="240"></point>
      </polygon>
    </shape>
    <shape name="face neutral" rotatable="false" editableColorIndex="0">
      <circle x="8" y="7" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <rectangle endX="240" startY="195" marked="false" color="255" endY="225" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="face sad" rotatable="false" editableColorIndex="0">
      <circle x="8" y="8" marked="true" color="-1920102913" diameter="285" filled="true"></circle>
      <circle x="60" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <circle x="180" y="75" marked="false" color="255" diameter="60" filled="true"></circle>
      <polygon color="255" filled="true" marked="false">
        <point x="150" y="168"></point>
        <point x="90" y="184"></point>
        <point x="62" y="210"></point>
        <point x="47" y="232"></point>
        <point x="67" y="244"></point>
        <point x="90" y="220"></point>
        <point x="109" y="205"></point>
        <point x="150" y="198"></point>
        <point x="192" y="205"></point>
        <point x="210" y="220"></point>
        <point x="227" y="242"></point>
        <point x="251" y="229"></point>
        <point x="236" y="206"></point>
        <point x="212" y="183"></point>
      </polygon>
    </shape>
    <shape name="fish" rotatable="false" editableColorIndex="0">
      <polygon color="-1" filled="true" marked="false">
        <point x="44" y="131"></point>
        <point x="21" y="87"></point>
        <point x="15" y="86"></point>
        <point x="0" y="120"></point>
        <point x="15" y="150"></point>
        <point x="0" y="180"></point>
        <point x="13" y="214"></point>
        <point x="20" y="212"></point>
        <point x="45" y="166"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="135" y="195"></point>
        <point x="119" y="235"></point>
        <point x="95" y="218"></point>
        <point x="76" y="210"></point>
        <point x="46" y="204"></point>
        <point x="60" y="165"></point>
      </polygon>
      <polygon color="-1" filled="true" marked="false">
        <point x="75" y="45"></point>
        <point x="83" y="77"></point>
        <point x="71" y="103"></point>
        <point x="86" y="114"></point>
        <point x="166" y="78"></point>
        <point x="135" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="136"></point>
        <point x="151" y="77"></point>
        <point x="226" y="81"></point>
        <point x="280" y="119"></point>
        <point x="292" y="146"></point>
        <point x="292" y="160"></point>
        <point x="287" y="170"></point>
        <point x="270" y="195"></point>
        <point x="195" y="210"></point>
        <point x="151" y="212"></point>
        <point x="30" y="166"></point>
      </polygon>
      <circle x="215" y="106" marked="false" color="255" diameter="30" filled="true"></circle>
    </shape>
    <shape name="flag" rotatable="false" editableColorIndex="0">
      <rectangle endX="75" startY="15" marked="true" color="-1920102913" endY="300" startX="60" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="90" y="150"></point>
        <point x="270" y="90"></point>
        <point x="90" y="30"></point>
      </polygon>
      <line endX="90" startY="135" marked="true" color="-1920102913" endY="135" startX="75"></line>
      <line endX="90" startY="45" marked="true" color="-1920102913" endY="45" startX="75"></line>
    </shape>
    <shape name="flower" rotatable="false" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="135" y="120"></point>
        <point x="165" y="165"></point>
        <point x="180" y="210"></point>
        <point x="180" y="240"></point>
        <point x="150" y="300"></point>
        <point x="165" y="300"></point>
        <point x="195" y="240"></point>
        <point x="195" y="195"></point>
        <point x="165" y="135"></point>
      </polygon>
      <circle x="85" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="147" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="192" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="85" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="40" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="177" y="132" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="70" y="85" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="130" y="25" marked="true" color="-1920102913" diameter="38" filled="true"></circle>
      <circle x="96" y="51" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="113" y="68" marked="false" color="255" diameter="74" filled="true"></circle>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="189" y="233"></point>
        <point x="219" y="188"></point>
        <point x="249" y="173"></point>
        <point x="279" y="188"></point>
        <point x="234" y="218"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="180" y="255"></point>
        <point x="150" y="210"></point>
        <point x="105" y="210"></point>
        <point x="75" y="240"></point>
        <point x="135" y="240"></point>
      </polygon>
    </shape>
    <shape name="hline" rotatable="false" editableColorIndex="0">
      <rectangle endX="45" startY="135" marked="true" color="-1920102913" endY="135" startX="0" filled="true"></rectangle>
      <rectangle endX="300" startY="120" marked="true" color="-1920102913" endY="180" startX="0" filled="true"></rectangle>
    </shape>
    <shape name="house" rotatable="false" editableColorIndex="0">
      <rectangle endX="255" startY="120" marked="true" color="-1920102913" endY="285" startX="45" filled="true"></rectangle>
      <rectangle endX="180" startY="210" marked="false" color="255" endY="285" startX="120" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="15" y="120"></point>
        <point x="150" y="15"></point>
        <point x="285" y="120"></point>
      </polygon>
      <line endX="270" startY="120" marked="false" color="255" endY="120" startX="30"></line>
    </shape>
    <shape name="leaf" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="210"></point>
        <point x="135" y="195"></point>
        <point x="120" y="210"></point>
        <point x="60" y="210"></point>
        <point x="30" y="195"></point>
        <point x="60" y="180"></point>
        <point x="60" y="165"></point>
        <point x="15" y="135"></point>
        <point x="30" y="120"></point>
        <point x="15" y="105"></point>
        <point x="40" y="104"></point>
        <point x="45" y="90"></point>
        <point x="60" y="90"></point>
        <point x="90" y="105"></point>
        <point x="105" y="120"></point>
        <point x="120" y="120"></point>
        <point x="105" y="60"></point>
        <point x="120" y="60"></point>
        <point x="135" y="30"></point>
        <point x="150" y="15"></point>
        <point x="165" y="30"></point>
        <point x="180" y="60"></point>
        <point x="195" y="60"></point>
        <point x="180" y="120"></point>
        <point x="195" y="120"></point>
        <point x="210" y="105"></point>
        <point x="240" y="90"></point>
        <point x="255" y="90"></point>
        <point x="263" y="104"></point>
        <point x="285" y="105"></point>
        <point x="270" y="120"></point>
        <point x="285" y="135"></point>
        <point x="240" y="165"></point>
        <point x="240" y="180"></point>
        <point x="270" y="195"></point>
        <point x="240" y="210"></point>
        <point x="180" y="210"></point>
        <point x="165" y="195"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="195"></point>
        <point x="135" y="240"></point>
        <point x="120" y="255"></point>
        <point x="105" y="255"></point>
        <point x="105" y="285"></point>
        <point x="135" y="285"></point>
        <point x="165" y="240"></point>
        <point x="165" y="195"></point>
      </polygon>
    </shape>
    <shape name="line" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="300" startX="150"></line>
    </shape>
    <shape name="line half" rotatable="true" editableColorIndex="0">
      <line endX="150" startY="0" marked="true" color="-1920102913" endY="150" startX="150"></line>
    </shape>
    <shape name="pentagon" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="15"></point>
        <point x="15" y="120"></point>
        <point x="60" y="285"></point>
        <point x="240" y="285"></point>
        <point x="285" y="120"></point>
      </polygon>
    </shape>
    <shape name="person" rotatable="false" editableColorIndex="0">
      <circle x="110" y="5" marked="true" color="-1920102913" diameter="80" filled="true"></circle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="120" y="195"></point>
        <point x="90" y="285"></point>
        <point x="105" y="300"></point>
        <point x="135" y="300"></point>
        <point x="150" y="225"></point>
        <point x="165" y="300"></point>
        <point x="195" y="300"></point>
        <point x="210" y="285"></point>
        <point x="180" y="195"></point>
        <point x="195" y="90"></point>
      </polygon>
      <rectangle endX="172" startY="79" marked="true" color="-1920102913" endY="94" startX="127" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="195" y="90"></point>
        <point x="240" y="150"></point>
        <point x="225" y="180"></point>
        <point x="165" y="105"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="105" y="90"></point>
        <point x="60" y="150"></point>
        <point x="75" y="180"></point>
        <point x="135" y="105"></point>
      </polygon>
    </shape>
    <shape name="plant" rotatable="false" editableColorIndex="0">
      <rectangle endX="165" startY="90" marked="true" color="-1920102913" endY="300" startX="135" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="255"></point>
        <point x="90" y="210"></point>
        <point x="45" y="195"></point>
        <point x="75" y="255"></point>
        <point x="135" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="255"></point>
        <point x="210" y="210"></point>
        <point x="255" y="195"></point>
        <point x="225" y="255"></point>
        <point x="165" y="285"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="180"></point>
        <point x="90" y="135"></point>
        <point x="45" y="120"></point>
        <point x="75" y="180"></point>
        <point x="135" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="180"></point>
        <point x="165" y="210"></point>
        <point x="225" y="180"></point>
        <point x="255" y="120"></point>
        <point x="210" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="105"></point>
        <point x="90" y="60"></point>
        <point x="45" y="45"></point>
        <point x="75" y="105"></point>
        <point x="135" y="135"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="165" y="105"></point>
        <point x="165" y="135"></point>
        <point x="225" y="105"></point>
        <point x="255" y="45"></point>
        <point x="210" y="60"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="135" y="90"></point>
        <point x="120" y="45"></point>
        <point x="150" y="15"></point>
        <point x="180" y="45"></point>
        <point x="165" y="90"></point>
      </polygon>
    </shape>
    <shape name="square" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
    </shape>
    <shape name="square 2" rotatable="false" editableColorIndex="0">
      <rectangle endX="270" startY="30" marked="true" color="-1920102913" endY="270" startX="30" filled="true"></rectangle>
      <rectangle endX="240" startY="60" marked="false" color="255" endY="240" startX="60" filled="true"></rectangle>
    </shape>
    <shape name="star" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="151" y="1"></point>
        <point x="185" y="108"></point>
        <point x="298" y="108"></point>
        <point x="207" y="175"></point>
        <point x="242" y="282"></point>
        <point x="151" y="216"></point>
        <point x="59" y="282"></point>
        <point x="94" y="175"></point>
        <point x="3" y="108"></point>
        <point x="116" y="108"></point>
      </polygon>
    </shape>
    <shape name="t" rotatable="false" editableColorIndex="0">
      <line endX="240" startY="15" marked="true" color="-1920102913" endY="15" startX="60"></line>
      <line endX="240" startY="15" marked="true" color="-1920102913" endY="225" startX="240"></line>
    </shape>
    <shape name="target" rotatable="false" editableColorIndex="0">
      <circle x="0" y="0" marked="true" color="-1920102913" diameter="300" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <circle x="60" y="60" marked="true" color="-1920102913" diameter="180" filled="true"></circle>
      <circle x="90" y="90" marked="false" color="255" diameter="120" filled="true"></circle>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
    </shape>
    <shape name="tree" rotatable="false" editableColorIndex="0">
      <circle x="118" y="3" marked="true" color="-1920102913" diameter="94" filled="true"></circle>
      <rectangle endX="180" startY="195" marked="false" color="-1653716737" endY="300" startX="120" filled="true"></rectangle>
      <circle x="65" y="21" marked="true" color="-1920102913" diameter="108" filled="true"></circle>
      <circle x="116" y="41" marked="true" color="-1920102913" diameter="127" filled="true"></circle>
      <circle x="45" y="90" marked="true" color="-1920102913" diameter="120" filled="true"></circle>
      <circle x="104" y="74" marked="true" color="-1920102913" diameter="152" filled="true"></circle>
    </shape>
    <shape name="triangle" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
    </shape>
    <shape name="triangle 2" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="150" y="30"></point>
        <point x="15" y="255"></point>
        <point x="285" y="255"></point>
      </polygon>
      <polygon color="255" filled="true" marked="false">
        <point x="151" y="99"></point>
        <point x="225" y="223"></point>
        <point x="75" y="224"></point>
      </polygon>
    </shape>
    <shape name="truck" rotatable="false" editableColorIndex="0">
      <rectangle endX="195" startY="45" marked="true" color="-1920102913" endY="187" startX="4" filled="true"></rectangle>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="296" y="193"></point>
        <point x="296" y="150"></point>
        <point x="259" y="134"></point>
        <point x="244" y="104"></point>
        <point x="208" y="104"></point>
        <point x="207" y="194"></point>
      </polygon>
      <rectangle endX="195" startY="60" marked="false" color="-1" endY="105" startX="195" filled="true"></rectangle>
      <polygon color="255" filled="true" marked="false">
        <point x="238" y="112"></point>
        <point x="252" y="141"></point>
        <point x="219" y="141"></point>
        <point x="218" y="112"></point>
      </polygon>
      <circle x="234" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <rectangle endX="214" startY="185" marked="true" color="-1920102913" endY="194" startX="181" filled="true"></rectangle>
      <circle x="144" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="false" color="255" diameter="42" filled="true"></circle>
      <circle x="24" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="144" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
      <circle x="234" y="174" marked="true" color="-1920102913" diameter="42" filled="false"></circle>
    </shape>
    <shape name="turtle" rotatable="true" editableColorIndex="0">
      <polygon color="1504722175" filled="true" marked="false">
        <point x="215" y="204"></point>
        <point x="240" y="233"></point>
        <point x="246" y="254"></point>
        <point x="228" y="266"></point>
        <point x="215" y="252"></point>
        <point x="193" y="210"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="195" y="90"></point>
        <point x="225" y="75"></point>
        <point x="245" y="75"></point>
        <point x="260" y="89"></point>
        <point x="269" y="108"></point>
        <point x="261" y="124"></point>
        <point x="240" y="105"></point>
        <point x="225" y="105"></point>
        <point x="210" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="105" y="90"></point>
        <point x="75" y="75"></point>
        <point x="55" y="75"></point>
        <point x="40" y="89"></point>
        <point x="31" y="108"></point>
        <point x="39" y="124"></point>
        <point x="60" y="105"></point>
        <point x="75" y="105"></point>
        <point x="90" y="105"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="132" y="85"></point>
        <point x="134" y="64"></point>
        <point x="107" y="51"></point>
        <point x="108" y="17"></point>
        <point x="150" y="2"></point>
        <point x="192" y="18"></point>
        <point x="192" y="52"></point>
        <point x="169" y="65"></point>
        <point x="172" y="87"></point>
      </polygon>
      <polygon color="1504722175" filled="true" marked="false">
        <point x="85" y="204"></point>
        <point x="60" y="233"></point>
        <point x="54" y="254"></point>
        <point x="72" y="266"></point>
        <point x="85" y="252"></point>
        <point x="107" y="210"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="119" y="75"></point>
        <point x="179" y="75"></point>
        <point x="209" y="101"></point>
        <point x="224" y="135"></point>
        <point x="220" y="225"></point>
        <point x="175" y="261"></point>
        <point x="128" y="261"></point>
        <point x="81" y="224"></point>
        <point x="74" y="135"></point>
        <point x="88" y="99"></point>
      </polygon>
    </shape>
    <shape name="v" rotatable="false" editableColorIndex="0">
      <line endX="240" startY="45" marked="true" color="-1920102913" endY="240" startX="45"></line>
      <line endX="240" startY="240" marked="true" color="-1920102913" endY="45" startX="240"></line>
    </shape>
    <shape name="vline" rotatable="false" editableColorIndex="0">
      <rectangle endX="180" startY="0" marked="true" color="-1920102913" endY="315" startX="120" filled="true"></rectangle>
    </shape>
    <shape name="wheel" rotatable="false" editableColorIndex="0">
      <circle x="3" y="3" marked="true" color="-1920102913" diameter="294" filled="true"></circle>
      <circle x="30" y="30" marked="false" color="255" diameter="240" filled="true"></circle>
      <line endX="150" startY="285" marked="true" color="-1920102913" endY="15" startX="150"></line>
      <line endX="285" startY="150" marked="true" color="-1920102913" endY="150" startX="15"></line>
      <circle x="120" y="120" marked="true" color="-1920102913" diameter="60" filled="true"></circle>
      <line endX="79" startY="40" marked="true" color="-1920102913" endY="269" startX="216"></line>
      <line endX="269" startY="84" marked="true" color="-1920102913" endY="221" startX="40"></line>
      <line endX="269" startY="216" marked="true" color="-1920102913" endY="79" startX="40"></line>
      <line endX="221" startY="40" marked="true" color="-1920102913" endY="269" startX="84"></line>
    </shape>
    <shape name="x" rotatable="false" editableColorIndex="0">
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="270" y="75"></point>
        <point x="225" y="30"></point>
        <point x="30" y="225"></point>
        <point x="75" y="270"></point>
      </polygon>
      <polygon color="-1920102913" filled="true" marked="true">
        <point x="30" y="75"></point>
        <point x="75" y="30"></point>
        <point x="270" y="225"></point>
        <point x="225" y="270"></point>
      </polygon>
    </shape>
  </turtleShapes>
  <linkShapes>
    <shape name="default" curviness="0.0">
      <lines>
        <line x="-0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
        <line x="0.0" visible="true">
          <dash value="1.0"></dash>
          <dash value="0.0"></dash>
        </line>
        <line x="0.2" visible="false">
          <dash value="0.0"></dash>
          <dash value="1.0"></dash>
        </line>
      </lines>
      <indicator>
        <shape name="link direction" rotatable="true" editableColorIndex="0">
          <line endX="90" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
          <line endX="210" startY="150" marked="true" color="-1920102913" endY="180" startX="150"></line>
        </shape>
      </indicator>
    </shape>
  </linkShapes>
  <previewCommands>setup-full repeat 150 [ go ]</previewCommands>
  <experiments>
    <experiment name="Experiment 104" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 105" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="100"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="100"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 106" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="4000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 107" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="1000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 108" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="25"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="25"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 109" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.02"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 110" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.0025"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 111" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
    <experiment name="Experiment 113" repetitions="10" sequentialRunOrder="true" runMetricsEveryStep="false" timeLimit="2000">
      <setup>setup-empty</setup>
      <go>go</go>
      <metrics>
        <metric>coopown-percent</metric>
        <metric>defother-percent</metric>
        <metric>consist-ethno-percent</metric>
        <metric>meetown-percent</metric>
        <metric>coop-percent</metric>
        <metric>last100coopown-percent</metric>
        <metric>last100defother-percent</metric>
        <metric>last100consist-ethno-percent</metric>
        <metric>last100meetown-percent</metric>
        <metric>last100coop-percent</metric>
        <metric>cc-percent</metric>
        <metric>cd-percent</metric>
        <metric>dc-percent</metric>
        <metric>dd-percent</metric>
      </metrics>
      <constants>
        <enumeratedValueSet variable="gain-of-receiving">
          <value value="0.03"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="initial-ptr">
          <value value="0.12"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrants-per-day">
          <value value="2"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-same">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="mutation-rate">
          <value value="0.005"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="cost-of-giving">
          <value value="0.01"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="immigrant-chance-cooperate-with-different">
          <value value="0.5"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="death-rate">
          <value value="0.1"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pxcor">
          <value value="50"></value>
        </enumeratedValueSet>
        <enumeratedValueSet variable="max-pycor">
          <value value="50"></value>
        </enumeratedValueSet>
      </constants>
    </experiment>
  </experiments>
</model>
